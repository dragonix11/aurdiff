# Maintainer: Michael Witten <mfwitten>

# The following revision compiles and works:
#
#   bfa418544ef05efd8b8cca9150d23922f2318205

# The various phases of the build can be controlled
# with the following variables (use an empty value
# to mean false). If you're hacking on the source,
# I RECOMMEND skipping the _source and _clean phases
# after getting things set up, and then simply managing
# them by hand.

_source=yes
_clean=yes
_config=yes
_compile=yes
_test=yes
_install=yes
#_install=          # do not install

######################################################################

pkgname=bup-git
pkgver=925.bfa4185
pkgver()
{
  cd "$srcdir/$_repo"
  echo "$(git rev-list --count HEAD).$(git rev-parse --short HEAD)"
}
pkgrel=2
pkgdesc="Backup tool (built from the git repo); it handles many very large files"

arch=(i686 x86_64)
url=https://github.com/apenwarr/bup
license=(GPL)

provides=(bup)
conflicts=(bup)

depends=(

  git
  python2
  python2-fuse
  python2-pyxattr
  pylibacl

  par2cmdline

)

makedepends=(

  #pandoc Currrently the pre-generated docs are used.
  rsync

)

options=('!strip')

_repo=repo

source=(
  ${_source:+"$_repo"::git+https://github.com/bup/bup.git}
)
md5sums=(
  ${_source:+SKIP}
)

prepare()
{
  #### Clean ####

    if [[ $_clean ]]; then

      msg "Cleaning ..."
      cd "$srcdir/$_repo"
      git reset --hard HEAD
      git clean -fdx

    fi

  #### Configure ####

    if [[ $_config ]]; then

      msg "Configuring ..."

      cd "$srcdir/$_repo"

      find . -type f -exec sed -i -e '1s/env python\b/env python2/' {} +

      sed -i -e 's/bup_find_prog python\b/bup_find_prog python2/' \
             -e 's/MF_PATH_INCLUDE PYTHON python\b/MF_PATH_INCLUDE PYTHON python2/' \
             config/configure

      sed -i -e 's/PYTHON=python\b/PYTHON=python2/' -e '/docs-available/d' Makefile

      sed -i -e 's/python\b -c/python2 -c/' t/{lib,test-meta}.sh 

    fi
}

build()
{
  #### Compile ####

    if [[ $_compile ]]; then
    
      msg "Compiling ..."
      cd "$srcdir/$_repo"
      make all import-docs

    fi
}

check()
{
  #### Test ####

    if [[ $_test ]]; then
    
      msg "Testing ..."
      cd "$srcdir/$_repo"
      make test

    fi
}

package()
{
  #### Install  ####

    if [[ $_install ]]; then
    
      msg "Installing ..."
      cd "$srcdir/$_repo"
      make DESTDIR="$pkgdir" install

    fi
}
