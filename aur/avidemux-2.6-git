# Maintainer: Gustavo Alvarez <sl1pkn07@gmail.com>

## OPTIONS: 0=off 1=on ##

_use_qt4=0
_use_gtk3=0
_use_cli=0

#########################

[ "${_use_qt4}" = "1" -o "${_use_gtk3}" = "1" -o "${_use_cli}" = "1" ] && _use+="avidemux-2.6-core-git "
[ "${_use_qt4}" = "1" ] && _use+="avidemux-2.6-qt4-git "
[ "${_use_gtk3}" = "1" ] && _use+="avidemux-2.6-gtk3-git "
[ "${_use_cli}" = "1" ] && _use+="avidemux-2.6-cli-git "

if [ "${_use_qt4}" = "1" -o "${_use_gtk3}" = "1" -o "${_use_cli}" = "1" ]; then
  source=('avidemux::git://gitorious.org/avidemux2-6/avidemux2-6.git')
  md5sums=('SKIP')
  makedepends=('cmake' 'git' 'subversion' 'yasm' 'sdl' 'libxv' 'libvdpau' 'sqlite' 'faad2' 'libdca' 'opencore-amr' 'jack' 'libsamplerate'
               'libvpx' 'aften' 'twolame' 'lame' 'xvidcore' 'x264' 'freetype2' 'fribidi' 'fontconfig' 'libxext' 'glu')
  [ "${_use_qt4}" = "1" ] && makedepends+=('qt4')
  [ "${_use_gtk3}" = "1" ] && makedepends+=('gtk3')
else
  warning "Need choice, at least, one GUI/Frontend, Please edit options in the PKGBUILD. if not build a EMPTY package"
fi

pkgbase=avidemux-2.6-git
pkgname=avidemux-2.6-git

true && pkgname=('avidemux-2.6-git' $_use)
pkgver=2.6.6.3488.1a51027
pkgrel=1
pkgdesc="A graphical/cli tool to edit video (filter/re-encode/split). (GIT version) [SPLIT PKGBUILD]"
url="http://www.avidemux.org/"
license=('GPL2')
arch=('i686' 'x86_64')
options=('!makeflags')
install=avidemux.install
_gitname="avidemux"

pkgver() {
  if [ "${_use_qt4}" = "1" -o "${_use_gtk3}" = "1" -o "${_use_cli}" = "1" ]; then
    cd "${_gitname}"
    echo "$(ver=$(cat cmake/avidemuxVersion.cmake | grep -e VERSION_MAJOR -e VERSION_MINOR -e VERSION_PATCH | head -n3 | cut -d '"' -f2) && echo ${ver} | tr ' ' .).$(git rev-list --count HEAD).$(git rev-parse --short HEAD)"
  else
    echo "EMPTY"
  fi
}

prepare() {
  if [ "${_use_qt4}" = "1" -o "${_use_gtk3}" = "1" -o "${_use_cli}" = "1" ]; then
    cd "${_gitname}"
    rm -fr build_core{,_plugins,_plugins_settings} build_{qt4,gtk3,cli}{,_plugins} get_x264_encode_plugin_conf build_x264_encode_plugin
    mkdir build_core{,_plugins,_plugins_settings}
    [ "${_use_gtk3}" = "0" -a "${_use_cli}" = "0" ] && mkdir get_x264_encode_plugin_conf build_x264_encode_plugin
    [ "${_use_qt4}" = "1" ] && mkdir build_qt4{,_plugins}
    [ "${_use_gtk3}" = "1" ] && mkdir build_gtk3{,_plugins}
    [ "${_use_cli}" = "1" ] && mkdir build_cli{,_plugins}
    true
  fi
}

build() {
  if [ "${_use_qt4}" = "1" -o "${_use_gtk3}" = "1" -o "${_use_cli}" = "1" ]; then
    _sourcedir="${srcdir}/${_gitname}"
    _fakeroot="${_sourcedir}/fakeroot"

    msg2 "Build Core Libs"
    cd "${_sourcedir}/build_core"
    cmake ../avidemux_core -DFAKEROOT="${_fakeroot}" -DCMAKE_INSTALL_PREFIX=/usr -G "Unix Makefiles"
    make VERBOSE=""
    make VERBOSE="" DESTDIR="${_fakeroot}" install

    if [ "${_use_qt4}" = "1" ]; then
      msg2 "Build Qt GUI"
      cd "${_sourcedir}/build_qt4"
      cmake ../avidemux/qt4 -DFAKEROOT="${_fakeroot}" -DCMAKE_INSTALL_PREFIX=/usr -G "Unix Makefiles" -DQT_LRELEASE_EXECUTABLE=/usr/bin/lrelease-qt4 -DLRELEASE_EXECUTABLE=/usr/bin/lrelease-qt4
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${_fakeroot}" install
    fi

    if [ "${_use_gtk3}" = "1" ]; then
      msg2 "Build Gtk3 GUI"
      cd "${_sourcedir}/build_gtk3"
      cmake ../avidemux/gtk -DFAKEROOT="${_fakeroot}" -DCMAKE_INSTALL_PREFIX=/usr -G "Unix Makefiles"
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${_fakeroot}" install
    fi

    if [ "${_use_cli}" = "1" ]; then
      msg2 "Build CLI frontend"
      cd "${_sourcedir}/build_cli"
      cmake ../avidemux/cli -DFAKEROOT="${_fakeroot}" -DCMAKE_INSTALL_PREFIX=/usr -G "Unix Makefiles"
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${_fakeroot}" install
    fi

    msg2 "Build Common Plugins"
    cd "${_sourcedir}/build_core_plugins"
    [ "${_use_qt4}" = "1" ] && _lrelease="-DQT_LRELEASE_EXECUTABLE=/usr/bin/lrelease-qt4"
    cmake ../avidemux_plugins -DFAKEROOT="${_fakeroot}" -DCMAKE_INSTALL_PREFIX=/usr -G "Unix Makefiles" ${_lrelease} \
          -DAVIDEMUX_SOURCE_DIR="${_sourcedir}" -DPLUGIN_UI=COMMON
    make VERBOSE=""
    make VERBOSE="" DESTDIR="${_fakeroot}" install

    if [ "${_use_gtk3}" = "0" -a "${_use_cli}" = "0" ]; then
      msg2 "Build Common x264 GTK3/CLI encoder plugin"
      cd "${_sourcedir}/get_x264_encode_plugin_conf"
      cmake ../avidemux/cli -DFAKEROOT="${_fakeroot}" -DCMAKE_INSTALL_PREFIX=/usr -G "Unix Makefiles"
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${_fakeroot}" install

      cd "${_sourcedir}/build_x264_encode_plugin"
      cmake ../avidemux_plugins -DFAKEROOT="${_fakeroot}" -DCMAKE_INSTALL_PREFIX=/usr -G "Unix Makefiles" \
            -DAVIDEMUX_SOURCE_DIR="${_sourcedir}" -DPLUGIN_UI=CLI
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${_fakeroot}" install
    fi

    if [ "${_use_qt4}" = "1" ]; then
      msg2 "Build Qt GUI Plugins"
      cd "${_sourcedir}/build_qt4_plugins"
      cmake ../avidemux_plugins -DFAKEROOT="${_fakeroot}" -DCMAKE_INSTALL_PREFIX=/usr -G "Unix Makefiles" -DQT_LRELEASE_EXECUTABLE=/usr/bin/lrelease-qt4 \
            -DAVIDEMUX_SOURCE_DIR="${_sourcedir}" -DPLUGIN_UI=QT4
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${_fakeroot}" install
    fi

    if [ "${_use_gtk3}" = "1" ]; then
      msg2 "Build Gtk3 GUI plugins"
      cd "${_sourcedir}/build_gtk3_plugins"
      cmake ../avidemux_plugins -DFAKEROOT="${_fakeroot}" -DCMAKE_INSTALL_PREFIX=/usr -G "Unix Makefiles" \
            -DAVIDEMUX_SOURCE_DIR="${_sourcedir}" -DPLUGIN_UI=GTK
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${_fakeroot}" install
    fi

    if [ "${_use_cli}" = "1" ]; then
      msg2 "Build CLI plugins"
      cd "${_sourcedir}/build_cli_plugins"
      cmake ../avidemux_plugins -DFAKEROOT="${_fakeroot}" -DCMAKE_INSTALL_PREFIX=/usr -G "Unix Makefiles" \
            -DAVIDEMUX_SOURCE_DIR="${_sourcedir}" -DPLUGIN_UI=CLI
      make VERBOSE=""
      make VERBOSE="" DESTDIR="${_fakeroot}" install
    fi

    msg2 "Build Settings"
    cd "${_sourcedir}/build_core_plugins_settings"
    cmake ../avidemux_plugins -DFAKEROOT="${_fakeroot}" -DCMAKE_INSTALL_PREFIX=/usr -G "Unix Makefiles"  \
          -DAVIDEMUX_SOURCE_DIR="${_sourcedir}" -DPLUGIN_UI=SETTINGS
    make VERBOSE=""
    make VERBOSE="" DESTDIR="${_fakeroot}" install
  fi
}

package_avidemux-2.6-git() {
  pkgdesc="A graphical tool to edit video (filter/re-encode/split). (GIT version)"
  arch=('any')
}

package_avidemux-2.6-core-git() {
  depends=('twolame' 'opencore-amr' 'jack' 'aften' 'flac' 'x264' 'xvidcore' 'sqlite' 'libpulse' 'libva' 'libvdpau' 'faac' 'faad2' 'lame' 'libdca' 'fribidi' 'libvpx' 'fontconfig')
  pkgdesc="Core libs for Avidemux 2.6. (GIT version)"
  provides=("avidemux-2.6-core-git=${pkgver}")
  optdepends=('avidemux-2.6-qt4-git: a Qt4 GUI for Avidemux 2.6. (GIT Version)'
              'avidemux-2.6-gtk3-git: a Gtk3 GUI for Avidemux 2.6. (GIT Version)'
              'avidemux-2.6-cli-git: a CLI frontend for Avidemux 2.6. (GIT Version)')

  _sourcedir="${srcdir}/${_gitname}"
  _fakeroot="${_sourcedir}/fakeroot"

  make -C "${_sourcedir}/build_core" VERBOSE="" DESTDIR="${pkgdir}" install
  make -C "${_sourcedir}/build_core_plugins" VERBOSE="" DESTDIR="${pkgdir}" install
  make -C "${_sourcedir}/build_core_plugins_settings" VERBOSE="" DESTDIR="${pkgdir}" install

  install -Dm755 "${_fakeroot}/usr/lib/ADM_plugins6/videoEncoders/libADM_ve_x264_other.so" "${pkgdir}/usr/lib/ADM_plugins6/videoEncoders/libADM_ve_x264_other.so"

  rm -fr "${pkgdir}/usr/lib/ADM_plugins6/scriptEngines/libADM_script_qt.so"
  rm -fr "${pkgdir}/usr/share/"
}

package_avidemux-2.6-qt4-git() {
  depends=("avidemux-2.6-core-git=${pkgver}" 'qt4' 'glu' 'x264')
  pkgdesc="Qt4 GUI for Avidemux 2.6. (GIT version)"
  install=avidemux.install

  _sourcedir="${srcdir}/${_gitname}"
  _fakeroot="${_sourcedir}/fakeroot"

  make -C "${_sourcedir}/build_qt4" VERBOSE="" DESTDIR="${pkgdir}" install
  make -C "${_sourcedir}/build_qt4_plugins" VERBOSE="" DESTDIR="${pkgdir}" install

  install -Dm755 "${_fakeroot}/usr/lib/ADM_plugins6/scriptEngines/libADM_script_qt.so" "${pkgdir}/usr/lib/ADM_plugins6/scriptEngines/libADM_script_qt.so"
  install -d "${pkgdir}/usr/share/avidemux6"
  cp -R "${_fakeroot}/usr/share/avidemux6/help" "${pkgdir}/usr/share/avidemux6"

  install -Dm644 "${_sourcedir}/avidemux2.desktop" "${pkgdir}/usr/share/applications/avidemux2.6-qt4.desktop"
  sed -e 's|Icon=avidemux|Icon=avidemux2.6-qt4|g' \
      -e 's|Exec=avidemux2_gtk|Exec=avidemux3_qt4|g' \
      -e 's|Name=avidemux2|Name=Avidemux 2.6 Qt4|' \
      -i "${pkgdir}/usr/share/applications/avidemux2.6-qt4.desktop"
  install -Dm644 "${_sourcedir}/avidemux_icon.png" "${pkgdir}/usr/share/pixmaps/avidemux2.6-qt4.png"
}

package_avidemux-2.6-gtk3-git() {
  depends=("avidemux-2.6-core-git=${pkgver}" 'gtk3' 'libxv' 'sdl' 'desktop-file-utils')
  pkgdesc="Gtk3 GUI for Avidemux 2.6. (GIT version)"
  install=avidemux.install

  _sourcedir="${srcdir}/${_gitname}"

  make -C "${_sourcedir}/build_gtk3" VERBOSE="" DESTDIR="${pkgdir}" install
  make -C "${_sourcedir}/build_gtk3_plugins" VERBOSE="" DESTDIR="${pkgdir}" install

  rm -fr "${pkgdir}/usr/lib/ADM_plugins6/videoEncoders"

  install -Dm644 "${_sourcedir}/avidemux2.desktop" "${pkgdir}/usr/share/applications/avidemux2.6-gtk.desktop"
  sed -e 's|Icon=avidemux|Icon=avidemux2.6-gtk|g' \
      -e 's|Exec=avidemux2_gtk|Exec=avidemux3_gtk|g' \
      -e 's|Name=avidemux2|Name=Avidemux 2.6 Gtk|' \
      -i "${pkgdir}/usr/share/applications/avidemux2.6-gtk.desktop"
  install -Dm644 "${_sourcedir}/avidemux_icon.png" "${pkgdir}/usr/share/pixmaps/avidemux2.6-gtk.png"
}

package_avidemux-2.6-cli-git() {
  depends=("avidemux-2.6-core-git=${pkgver}" 'x264')
  pkgdesc="CLI frontend for Avidemux 2.6. (GIT version)"

  _sourcedir="${srcdir}/${_gitname}"

  make -C "${_sourcedir}/build_cli" VERBOSE="" DESTDIR="${pkgdir}" install
  make -C "${_sourcedir}/build_cli_plugins" VERBOSE="" DESTDIR="${pkgdir}" install

  rm -fr "${pkgdir}/usr/lib/ADM_plugins6/videoEncoders"
}
