# $Id$
# Maintainer: Pierre Schmitz <pierre@archlinux.de>

# AUR split packages no likey.
# This will shove 'em down its throat.
pkgname=php53

true && pkgbase=php53
true && pkgname=('php53'
         'php53-cgi'
         'php53-apache'
         'php53-fpm'
         'php53-embed'
         'php53-pear'
         'php53-enchant'
         'php53-gd'
         'php53-intl'
         'php53-ldap'
         'php53-mcrypt'
         'php53-mssql'
         'php53-odbc'
         'php53-pgsql'
         'php53-pspell'
         'php53-snmp'
         'php53-sqlite'
         'php53-tidy'
         'php53-xsl')
pkgver=5.3.27
_suhosinver=5.3.9-0.9.10
pkgrel=2
arch=('i686' 'x86_64')
license=('PHP')
url='http://www.php.net'
makedepends=('apache' 'imap' 'postgresql-libs' 'libldap' 'postfix'
             'sqlite' 'unixodbc' 'net-snmp' 'libzip' 'enchant' 'file' 'freetds'
             'libmcrypt' 'tidyhtml' 'aspell' 'libltdl' 'libpng' 'libjpeg' 'icu'
             'curl' 'libxslt' 'openssl' 'bzip2' 'db' 'gmp' 'freetype2' 'sed')
source=("http://www.php.net/distributions/${pkgbase%53}-${pkgver}.tar.bz2"
        "http://download.suhosin.org/suhosin-patch-${_suhosinver}.patch.gz"
        'php.ini.patch' 'apache.conf' 'rc.d.php-fpm' 'php-fpm.conf.in.patch'
        'logrotate.d.php-fpm' 'suhosin.patch')

build() {
	phpconfig="--srcdir=../${pkgbase%53}-${pkgver} \
		--prefix=/usr \
		--sysconfdir=/etc/php \
		--localstatedir=/var \
		--with-layout=GNU \
		--with-config-file-path=/etc/php \
		--with-config-file-scan-dir=/etc/php/conf.d \
		--enable-inline-optimization \
		--disable-debug \
		--disable-rpath \
		--disable-static \
		--enable-shared \
		--mandir=/usr/share/man \
		--without-pear \
		"

	phpextensions="--enable-bcmath=shared \
		--enable-calendar=shared \
		--enable-dba=shared \
		--enable-exif=shared \
		--enable-ftp=shared \
		--enable-gd-native-ttf \
		--enable-intl=shared \
		--enable-json=shared \
		--enable-mbregex \
		--enable-mbstring \
		--enable-pdo \
		--enable-phar=shared \
		--enable-posix=shared \
		--enable-session \
		--enable-shmop=shared \
		--enable-soap=shared \
		--enable-sockets=shared \
		--enable-sqlite-utf8 \
		--enable-sysvmsg=shared \
		--enable-sysvsem=shared \
		--enable-sysvshm=shared \
		--enable-xml \
		--enable-zip=shared \
		--with-bz2=shared \
		--with-curl=shared \
		--with-enchant=shared,/usr \
		--with-freetype-dir=shared,/usr \
		--with-gd=shared \
		--with-gdbm=shared \
		--with-gettext=shared \
		--with-gmp=shared \
		--with-iconv=shared \
		--with-icu-dir=/usr \
		--with-imap-ssl=shared \
		--with-imap=shared \
		--with-jpeg-dir=shared,/usr \
		--with-ldap=shared \
		--with-ldap-sasl \
		--with-mcrypt=shared \
		--with-mhash \
		--with-mssql=shared \
		--with-mysql-sock=/var/run/mysqld/mysqld.sock \
		--with-mysql=shared,mysqlnd \
		--with-mysqli=shared,mysqlnd \
		--with-openssl=shared \
		--with-pcre-regex=/usr \
		--with-pdo-mysql=shared,mysqlnd \
		--with-pdo-odbc=shared,unixODBC,/usr \
		--with-pdo-pgsql=shared \
		--with-pdo-sqlite=shared,/usr \
		--with-pgsql=shared \
		--with-png-dir=shared,/usr \
		--with-pspell=shared \
		--with-regex=php \
		--with-snmp=shared \
		--with-sqlite3=shared,/usr \
		--with-sqlite=shared \
		--with-tidy=shared \
		--with-unixODBC=shared,/usr \
		--with-xmlrpc=shared \
		--with-xsl=shared \
		--with-zlib \
		--without-db2 \
		--without-db3 \
		"

	EXTENSION_DIR=/usr/lib/php/modules
	export EXTENSION_DIR
	PEAR_INSTALLDIR=/usr/share/pear
	export PEAR_INSTALLDIR

	# fix the suhosin patch
	patch -l -i ${srcdir}/suhosin.patch
	sed -i 's/1997-2004/1997-2013/g' ${srcdir}/suhosin-patch-${_suhosinver}.patch
	sed -i 's/1997-2012/1997-2013/g' ${srcdir}/suhosin-patch-${_suhosinver}.patch

	cd ${srcdir}/${pkgbase%53}-${pkgver}

	# apply suhosin patch
	patch -F3 -p1 -i ${srcdir}/suhosin-patch-${_suhosinver}.patch

	# adjust paths
	patch -p0 -i ${srcdir}/php.ini.patch
	patch -p0 -i ${srcdir}/php-fpm.conf.in.patch

	# php
	mkdir ${srcdir}/build-php
	cd ${srcdir}/build-php
	ln -s ../${pkgbase%53}-${pkgver}/configure
	./configure ${phpconfig} \
		--disable-cgi \
		--with-readline \
		--enable-pcntl \
		${phpextensions}
	make

	# cgi and fcgi
	# reuse the previous run; this will save us a lot of time
	cp -a ${srcdir}/build-php ${srcdir}/build-cgi
	cd ${srcdir}/build-cgi
	./configure ${phpconfig} \
		--disable-cli \
		--enable-cgi \
		${phpextensions}
	make

	# apache
	cp -a ${srcdir}/build-php ${srcdir}/build-apache
	cd ${srcdir}/build-apache
	./configure ${phpconfig} \
		--disable-cli \
		--with-apxs2 \
		${phpextensions}
	make

	# fpm
	cp -a ${srcdir}/build-php ${srcdir}/build-fpm
	cd ${srcdir}/build-fpm
	./configure ${phpconfig} \
		--disable-cli \
		--enable-fpm \
		--with-fpm-user=http \
		--with-fpm-group=http \
		${phpextensions}
	make

	# embed
	cp -a ${srcdir}/build-php ${srcdir}/build-embed
	cd ${srcdir}/build-embed
	./configure ${phpconfig} \
		--disable-cli \
		--enable-embed=shared \
		${phpextensions}
	make

	# pear
	cp -a ${srcdir}/build-php ${srcdir}/build-pear
	cd ${srcdir}/build-pear
	./configure ${phpconfig} \
		--disable-cgi \
		--with-readline \
		--enable-pcntl \
		--with-pear \
		${phpextensions}
	make
}

# check() {
# 	cd ${srcdir}/build-php
# 	make test
# }

package_php53() {
	pkgdesc='An HTML-embedded scripting language'
	depends=('pcre' 'libxml2' 'bzip2' 'curl')
	replaces=('php' 'php-fileinfo' 'php-gmp' 'php-curl')
	provides=('php' 'php-fileinfo' 'php-gmp' 'php-curl')
	conflicts=('php' 'php-fileinfo' 'php-gmp' 'php-curl')
	backup=('etc/php/php.ini')

	cd ${srcdir}/build-php
	make -j1 INSTALL_ROOT=${pkgdir} install
	install -d -m755 ${pkgdir}/usr/share/pear
	# install php.ini
	install -D -m644 ${srcdir}/${pkgbase%53}-${pkgver}/php.ini-production ${pkgdir}/etc/php/php.ini
	install -d -m755 ${pkgdir}/etc/php/conf.d/

	# remove static modules
	rm -f ${pkgdir}/usr/lib/php/modules/*.a
	# remove modules provided by sub packages
	rm -f ${pkgdir}/usr/lib/php/modules/{enchant,gd,intl,ldap,mcrypt,mssql,odbc,pdo_odbc,pgsql,pdo_pgsql,pspell,snmp,sqlite3,pdo_sqlite,tidy,xsl}.so
	# remove empty directory
	rmdir ${pkgdir}/usr/include/php/include
}

package_php53-cgi() {
	pkgdesc='CGI and FCGI SAPI for PHP'
	depends=('php53')
	conflicts=('php-cgi')
	replaces=('php-cgi')
	provides=('php-cgi')

	install -D -m755 ${srcdir}/build-cgi/sapi/cgi/php-cgi ${pkgdir}/usr/bin/php-cgi
}

package_php53-apache() {
	pkgdesc='Apache SAPI for PHP'
	depends=('php53' 'apache')
	conflicts=('php-apache')
        replaces=('php-apache')
        provides=('php-apache')
	backup=('etc/httpd/conf/extra/php5_module.conf')

	install -D -m755 ${srcdir}/build-apache/libs/libphp5.so ${pkgdir}/usr/lib/httpd/modules/libphp5.so
	install -D -m644 ${srcdir}/apache.conf ${pkgdir}/etc/httpd/conf/extra/php5_module.conf
}

package_php53-fpm() {
	pkgdesc='FastCGI Process Manager for PHP'
	depends=('php53')
	conflicts=('php-fpm')
	replaces=('php-fpm')
	provides=('php-fpm')
	backup=('etc/php/php-fpm.conf')

	install -D -m755 ${srcdir}/build-fpm/sapi/fpm/php-fpm ${pkgdir}/usr/sbin/php-fpm
	install -D -m644 ${srcdir}/build-fpm/sapi/fpm/php-fpm.8 ${pkgdir}/usr/share/man/man8/php-fpm.8
	install -D -m644 ${srcdir}/build-fpm/sapi/fpm/php-fpm.conf ${pkgdir}/etc/php/php-fpm.conf
	install -D -m755 ${srcdir}/rc.d.php-fpm ${pkgdir}/etc/rc.d/php-fpm
	install -D -m644 ${srcdir}/logrotate.d.php-fpm ${pkgdir}/etc/logrotate.d/php-fpm
	install -d -m755 ${pkgdir}/etc/php/fpm.d
}

package_php53-embed() {
	pkgdesc='Embed SAPI for PHP'
	depends=('php53')
	conflicts=('php-embed')
        replaces=('php-embed')
        provides=('php-embed')

	install -D -m755 ${srcdir}/build-embed/libs/libphp5.so ${pkgdir}/usr/lib/libphp5.so
	install -D -m644 ${srcdir}/${pkgbase%53}-${pkgver}/sapi/embed/php_embed.h ${pkgdir}/usr/include/php/sapi/embed/php_embed.h
}

package_php53-pear() {
	pkgdesc='PHP Extension and Application Repository'
	depends=('php53')
	conflicts=('php-pear')
        replaces=('php-pear')
        provides=('php-pear')
	backup=('etc/php/pear.conf')

	cd ${srcdir}/build-pear
	make -j1 install-pear INSTALL_ROOT=${pkgdir}
	local i
	while read i; do
		[ ! -e "$i" ] || rm -rf "$i"
	done < <(find ${pkgdir} -name '.*')
}

package_php53-enchant() {
	depends=('php53' 'enchant')
	conflicts=('php-enchant')
        replaces=('php-enchant')
        provides=('php-enchant')
	pkgdesc='enchant module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/enchant.so ${pkgdir}/usr/lib/php/modules/enchant.so
}

package_php53-gd() {
	depends=('php53' 'libpng' 'libjpeg' 'freetype2')
	conflicts=('php-gd')
        replaces=('php-gd')
        provides=('php-gd')
	pkgdesc='gd module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/gd.so ${pkgdir}/usr/lib/php/modules/gd.so
}

package_php53-intl() {
	depends=('php53' 'icu')
	conflicts=('php-intl')
        replaces=('php-intl')
        provides=('php-intl')
	pkgdesc='intl module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/intl.so ${pkgdir}/usr/lib/php/modules/intl.so
}

package_php53-ldap() {
	depends=('php53' 'libldap')
	conflicts=('php-ldap')
        replaces=('php-ldap')
        provides=('php-ldap')
	pkgdesc='ldap module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/ldap.so ${pkgdir}/usr/lib/php/modules/ldap.so
}

package_php53-mcrypt() {
	depends=('php53' 'libmcrypt' 'libltdl')
	conflicts=('php-mcrypt')
        replaces=('php-mcrypt')
        provides=('php-mcrypt')
	pkgdesc='mcrypt module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/mcrypt.so ${pkgdir}/usr/lib/php/modules/mcrypt.so
}

package_php53-mssql() {
	depends=('php53' 'freetds')
	conflicts=('php-mssql')
        replaces=('php-mssql')
        provides=('php-mssql')
	pkgdesc='mssql module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/mssql.so ${pkgdir}/usr/lib/php/modules/mssql.so
}

package_php53-odbc() {
	depends=('php53' 'unixodbc')
	conflicts=('php-odbc')
        replaces=('php-odbc')
        provides=('php-odbc')
	pkgdesc='ODBC modules for PHP'
	install -D -m755 ${srcdir}/build-php/modules/odbc.so ${pkgdir}/usr/lib/php/modules/odbc.so
	install -D -m755 ${srcdir}/build-php/modules/pdo_odbc.so ${pkgdir}/usr/lib/php/modules/pdo_odbc.so
}

package_php53-pgsql() {
	depends=('php53' 'postgresql-libs')
	conflicts=('php-pgsql')
        replaces=('php-pgsql')
        provides=('php-pgsql')
	pkgdesc='PostgreSQL modules for PHP'
	install -D -m755 ${srcdir}/build-php/modules/pgsql.so ${pkgdir}/usr/lib/php/modules/pgsql.so
	install -D -m755 ${srcdir}/build-php/modules/pdo_pgsql.so ${pkgdir}/usr/lib/php/modules/pdo_pgsql.so
}

package_php53-pspell() {
	depends=('php53' 'aspell')
	conflicts=('php-aspell')
        replaces=('php-aspell')
        provides=('php-aspell')
	pkgdesc='pspell module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/pspell.so ${pkgdir}/usr/lib/php/modules/pspell.so
}

package_php53-snmp() {
	depends=('php53' 'net-snmp')
	conflicts=('php-snmp')
        replaces=('php-snmp')
        provides=('php-snmp')
	pkgdesc='snmp module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/snmp.so ${pkgdir}/usr/lib/php/modules/snmp.so
}

package_php53-sqlite() {
	depends=('php53' 'sqlite')
	conflicts=('php-sqlite')
        replaces=('php-sqlite')
        provides=('php-sqlite')
	pkgdesc='sqlite module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/sqlite3.so ${pkgdir}/usr/lib/php/modules/sqlite3.so
	install -D -m755 ${srcdir}/build-php/modules/pdo_sqlite.so ${pkgdir}/usr/lib/php/modules/pdo_sqlite.so
}

package_php53-tidy() {
	depends=('php53' 'tidyhtml')
	conflicts=('php-tidy')
        replaces=('php-tidy')
        provides=('php-tidy')
	pkgdesc='tidy module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/tidy.so ${pkgdir}/usr/lib/php/modules/tidy.so
}

package_php53-xsl() {
	depends=('php53' 'libxslt')
	conflicts=('php-xsl')
        replaces=('php-xsl')
        provides=('php-xsl')
	pkgdesc='xsl module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/xsl.so ${pkgdir}/usr/lib/php/modules/xsl.so
}

sha1sums=('4f95682940ebe1bc1a93812d593460625a2aae64'
          '7b9ef5c3e0831154df0d6290aba0989ca90138ed'
          '462927954b4074487b46722b0442185100def240'
          '82776db01f70b9186ba455de22eb06fe193f1d30'
          '19277de25fa35341455db6dae3e7713d1e2c6c33'
          'a1e2a23d8efc49dafd323cc6dcba48368dbafb0b'
          'b6a661523535a8e7e60d4a0c054d8f6066edf63e'
          '4d9fea0b7ab856c59ddbf722fe6c95b8e479af9b')
