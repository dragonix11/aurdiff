# $Id$
# Maintainer: Alex Wiggins <alex.d.wiggins@gmail.com>
# Contributer: Kyle Keen <keenerd@gmail.com>
# Contributor: Florian Pritz <bluewind@xinu.at>
# Contributor: Paulo Matias <matiasΘarchlinux-br·org>
# Contributor: Daniel J Griffiths <ghost1227@archlinux.us>

pkgbase=oss-nonfree
pkgname=oss-nonfree
#true && pkgname=(oss-nonfree libflashsupport-oss)
pkgver=4.2_2008
pkgrel=6
arch=('i686' 'x86_64')
url="http://www.opensound.com/oss.html"
license=('custom:"4Front Commercial License"')
# makedepends=('gtk2')
makedepends=('patch' 'sed')
if [[ "$CARCH" == "i686" ]]; then
  source=("http://www.4front-tech.com/release/oss-linux-v4.2-2008-i686.tar.bz2"
    "rm-init-scripts.patch"
    "soundon.patch"
    "remove-hal.patch"
    "linux-3.8.patch"
    "linux-3.10.patch"
    "oss.service"
    "LICENSE"
  )
  md5sums=('d800f5d4244b83bcba62817c4109ff8c'
           'b9a380a0ac8896390d71ac13676f27e1'
           '566a3e0585ffb7eb0d8f77b9cc94d8c7'
           'cd7f1dc6166bba8c94d96f3a28e948a5'
           '26492b63c2d6861912bdab56fd5d3d9c'
           'b34ce14d0184c05eb1e526b4bcf5c78a'
           '39c46b10a6bc56fc146d669a61bd3028'
	   '39201b4c5da86cb8ab63849a7d6a5079')
else
  source=("http://www.4front-tech.com/release/oss-linux-v4.2-2008-x86_64.tar.bz2"
    "rm-init-scripts.patch"
    "soundon.patch"
    "remove-hal.patch"
    "linux-3.8.patch"
    "linux-3.10.patch"
    "oss.service"
    "LICENSE"
  )
  md5sums=('9c26c16f14c11737d4f6596442ed8ce3'
           'b9a380a0ac8896390d71ac13676f27e1'
           '566a3e0585ffb7eb0d8f77b9cc94d8c7'
           'cd7f1dc6166bba8c94d96f3a28e948a5'
           '26492b63c2d6861912bdab56fd5d3d9c'
           'b34ce14d0184c05eb1e526b4bcf5c78a'
           '39c46b10a6bc56fc146d669a61bd3028'
	   '39201b4c5da86cb8ab63849a7d6a5079')
fi

# _dir=oss-v${pkgver/_*}-build${pkgver/*_}-src-gpl

build() {
  #cd "${srcdir}/${_dir}"

  # Avoid these flags conflicting with OSS build system.
  #unset CFLAGS
  #unset LDFLAGS
  #unset OSFLAGS
  #unset LIBRARIES
  #export NO_WARNING_CHECKS=yes

  # Compile libflashsupport.so only in packaging time, so we avoid
  # conflicts with other packages and ease package management.
  #msg "Building libflashsupport.so."
  #cd oss/lib
  #gcc -shared -fPIC -O2 -Wall -Werror flashsupport.c -o libflashsupport.so

  #msg "Preparing the build environment."
  #cd "${srcdir}"

  # Create build directory and configure
  #rm -rf build
  #mkdir build && cd build
  #"${srcdir}/${_dir}/configure" --enable-libsalsa=NO --regparm

  # ossvermagic hardcodes /lib/modules *grumble*
  #sed -i 's|/lib/modules|/usr&|' \
  #    os_cmd/Linux/ossvermagic/ossvermagic.c

  #pushd "$srcdir/$_dir"
  #patch -p0 -i "${srcdir}/linux-3.8.patch"
  #popd

  #msg "Building OSS."
  #make build

  msg "Moving precompiled files."
  cd "${srcdir}"
  mkdir build
  cd build
  mkdir prototype
  cd "${srcdir}"
  mv usr build/prototype
  mv etc build/prototype

  msg "Patching init scripts."
  cd "${srcdir}/build/prototype"
  rm usr/lib/oss/etc/S89oss
  patch -p0 -i "${srcdir}/rm-init-scripts.patch"
  patch -p0 -i "${srcdir}/soundon.patch"
  # remove hal dependency
  patch -p0 -i "${srcdir}/remove-hal.patch"
  rm -rf usr/lib/oss/scripts/oss_usb-create-devices usr/lib/oss/scripts/90-oss_usb-create-device.fdi

  msg "Apply kernel 3.8 patch."
  patch -p0 -i "${srcdir}/linux-3.8.patch"

  msg "Apply kernel 3.10 patch."
  patch -p0 -i "${srcdir}/linux-3.10.patch"

  # fix kernel module directories
  sed -i 's#/lib/modules/$KERNEL_VERSION/kernel/#/usr/lib/modules/$KERNEL_VERSION/extramodules/kernel/#g' usr/sbin/soundon
  sed -i 's#/lib/modules/$UNAME/kernel/#/usr/lib/modules/$UNAME/extramodules/kernel/#g' usr/lib/oss/build/install.sh
  sed -i 's#mkdir /lib/modules#mkdir -p /usr/lib/modules#' usr/lib/oss/build/install.sh
  sed -i 's#mkdir \(/usr/lib/modules/$UNAME/extramodules/kernel/oss\)#mkdir -p \1#' usr/lib/oss/build/install.sh
  sed -i 's#\([= ]\)/lib/modules#\1/usr/lib/modules#g' \
    usr/lib/oss/build/install.sh \
    usr/lib/oss/scripts/restore_drv.sh \
    usr/lib/oss/scripts/setup-alsa.sh \
    usr/lib/oss/scripts/remove_drv.sh \
    usr/lib/oss/build/Makefile.tmpl \
    usr/lib/oss/build/Makefile.osscore \
    usr/lib/oss/cuckoo/Makefile
}

package_oss-nonfree() {
  pkgdesc="Open Sound System UNIX audio architecture (including nonfree drivers)"
  depends=('gcc' 'make' 'linux-headers' 'libtool' 'sed')
  optdepends=('gtk2: for graphical mixer (ossxmix)'
              'libflashsupport-oss: Adobe flash plugin support')
  provides=('oss')
  conflicts=('oss' 'oss-linux' 'oss-linux-free' 'oss-testing')
  backup=('usr/lib/oss/soundon.user')
  install=oss.install

  cd "${srcdir}/build/prototype"
  cp -a * "${pkgdir}"

  cd "$pkgdir"
  mv usr/sbin/* usr/bin
  rmdir usr/sbin
  chmod -R a+r . # All files can have read permission (FS#13815)
  find . -type d -exec chmod a+x '{}' \; # Make namcap happy
  install -Dm644 "$srcdir/oss.service" usr/lib/systemd/system/oss.service
  install -Dm644 "$srcdir/LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
}

#package_libflashsupport-oss() {
#  pkgdesc="Adobe flash plugin support lib (OSSv4)"
#  conflicts=('libflashsupport' 'libflashsupport-pulse' 'libflashsupport-oss')
#  depends=('oss')
#
#  cd "${srcdir}/${_dir}"
#
#  install -dm755 "$pkgdir/usr/lib"
#  ln -s oss/lib/libflashsupport.so "$pkgdir/usr/lib/libflashsupport.so"
#}

# vim:set ts=2 sw=2 et:
