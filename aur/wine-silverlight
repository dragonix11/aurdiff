# Maintainer  : Anish Bhatt anish [at] gatech [dot] edu
# Contributor : Jesus Alvarez <jeezusjr@gmail.com>
# Contributor : sxe <sxxe@gmx.de>
# Based on the wine package in the community repository

pkgname=wine-silverlight
pkgver=1.7.4
pkgrel=4
pkgdesc="WINE patched with Microsoft Silverlight and Netflix compatibility."
url="http://www.winehq.com"
license=('LGPL2.1')
arch=('x86_64' 'i686')
install=wine-silverlight.install

source=("http://prdownloads.sourceforge.net/wine/wine-${pkgver}.tar.bz2"
        "0001-ws2_32-Ask-the-server-to-process-unsupported-WSAIoct.patch"
        "0002-server-Implement-an-interface-change-notification-ob.patch"
        "0003-ws2_32-Add-an-interactive-test-for-interface-change-.patch"
        "0004-server-Create-directories-with-the-specified-securit.patch"
        "0005-server-Store-and-return-security-attributes-with-ext.patch"
        "0006-ntdll-Inherit-security-attributes-from-parent-direct.patch"
        "0007-kernel32-Allow-string-comparison-with-linguistic-cas.patch"
        "0008-quartz-Return-VideoMixingRenderer9-when-requesting-Vid.patch"
        "0009-quartz-Implement-IVMRMonitorConfig-interface-with-stub.patch"
        "0010-quartz-Implements-stubs-for-IAMCertifiedOutputProtecti.patch"
        "0011-winex11-Splitted-functions-X11DRV_FocusOut-and-X11DRV_.patch"
        "0012-winex11-Send-XEMBED_REQUEST_FOCUS-request-for-embedded.patch"
        "0013-winex11-Implement-additional-XEMBED_-events.patch"
        "0014-winex11-Update-gl_drawable-for-embedded-windows.patch"
        "30-win32-aliases.conf")

md5sums=('a1e78cdce188a4f52244780b6628507b'
         '3d27a2da9b1d5b3f3658fb5baf683fe3'
         'b22626eb5cbb35ac974297fab50a69b8'
         'a32129ce3b47785083a62cd5c2ab1031'
         '2f617b523fd38dd0b71547dd323c7c14'
         '55c50c0d1d1185e4fd789ff11c0cdf13'
         '7be68003f3b5cad91270d33eb09338df'
         '31df02dc75b2e280aee57c1b46de2389'
         '2a30d6e4525f3f87dab55ea2116f8a32'
         '4ae1e90ca0fbec9fb00d07bad9e03638'
         '67f83d8ec778b4d0e9ec90fd09316d61'
         'f917413eff81d35b864552005536310d'
         '96170940121b1745745cad1c4b098e05'
         '91157290fec7356bae7b60fcea6ae96c'
         '17d2fced814278770a31c73c45c0aadf'
         '1ff4e467f59409272088d92173a0f801')

depends=('fontconfig'
         'libxcursor'
         'libxrandr'
         'libxdamage'
         'libxi'
         'gettext'
         'glu'
         'libsm'
         'gcc-libs'
         'attr'
         'desktop-file-utils')

makedepends=('libgl'
             'autoconf'
             'ncurses'
             'bison'
             'perl'
             'fontforge'
             'flex'
             'prelink'
             'gcc>=4.5.0-2'
             'giflib'
             'libpng'
             'gnutls'
             'libxinerama'
             'libxcomposite'
             'libxmu'
             'libxxf86vm'
             'libxml2'
             'libldap'
             'lcms'
             'mpg123'
             'openal'
             'v4l-utils'
             'alsa-lib'
             'samba')

optdepends=('giflib'
            'libpng'
            'libldap'
            'gnutls'
            'lcms'
            'libxml2'
            'mpg123'
            'openal'
            'v4l-utils'
            'libpulse'
            'alsa-plugins'
            'alsa-lib'
            'libjpeg-turbo'
            'libxcomposite'
            'oss'
            'cups'
            'samba')

if [[ $CARCH == x86_64 ]]; then

  depends=('lib32-fontconfig'
           'lib32-libxcursor'
           'lib32-libxrandr'
           'lib32-libxdamage'
           'lib32-libxi'
           'lib32-gettext'
           'lib32-glu'
           'lib32-gcc-libs'
           'lib32-attr'
           'desktop-file-utils')

  makedepends=('autoconf'
               'ncurses'
               'bison'
               'perl'
               'fontforge'
               'flex'
               'prelink'
               'gcc-multilib>=4.5.0-2'
               'lib32-giflib'
               'lib32-libpng'
               'lib32-gnutls'
               'lib32-libxinerama'
               'lib32-libxcomposite'
               'lib32-libxmu'
               'lib32-libxxf86vm'
               'lib32-libxml2'
               'lib32-libldap'
               'lib32-lcms'
               'lib32-mpg123'
               'lib32-openal'
               'lib32-v4l-utils'
               'lib32-alsa-lib'
               'lib32-libgl'
               'attr'
               'samba')

  optdepends=('lib32-giflib'
              'lib32-libpng'
              'lib32-libldap'
              'lib32-gnutls'
              'lib32-lcms'
              'lib32-libxml2'
              'lib32-mpg123'
              'lib32-openal'
              'lib32-v4l-utils'
              'lib32-libpulse'
              'lib32-alsa-plugins'
              'lib32-alsa-lib'
              'lib32-libjpeg-turbo'
              'lib32-libxcomposite'
              'oss'
              'cups'
              'samba')

fi

_upname="wine-${pkgver}"

# Uncomment the line below if you want wine installed to /opt/wine-silverlight instead of replacing wine
#customprefix=1

if [[ $customprefix != 1 ]]; then
  _prefix="usr"
  _sysconf="etc"
  conflicts=('wine')
  provides=('wine=${pkgver}')
else
  # change _prefix if you don't want to use the default custom prefix of /opt/wine-silverlight
  _prefix="opt/$pkgname"
  _sysconf="$_prefix/etc"
fi

build() {
  cd "$srcdir"




  # ncurses fix
  sed -i 's|libncurses|libncursesw|g' "$srcdir/$_upname/configure"
  sed -i 's|lncurses|lncursesw|g' "$srcdir/$_upname/configure" 

  # Get rid of old build dirs
  rm -rf $pkgname-{32,64}-build
  mkdir $pkgname-32-build

  # These additional CPPFLAGS solve FS#27662 and FS#34195
  export CPPFLAGS="${CPPFLAGS/-D_FORTIFY_SOURCE=2/} -D_FORTIFY_SOURCE=0"

  cd "$srcdir"/"${_upname}"

  patch -p1 <../0001-ws2_32-Ask-the-server-to-process-unsupported-WSAIoct.patch
  patch -p1 <../0002-server-Implement-an-interface-change-notification-ob.patch
  patch -p1 <../0003-ws2_32-Add-an-interactive-test-for-interface-change-.patch
  patch -p1 <../0004-server-Create-directories-with-the-specified-securit.patch
  patch -p1 <../0005-server-Store-and-return-security-attributes-with-ext.patch
  patch -p1 <../0006-ntdll-Inherit-security-attributes-from-parent-direct.patch
  patch -p1 <../0007-kernel32-Allow-string-comparison-with-linguistic-cas.patch
  patch -p1 <../0008-quartz-Return-VideoMixingRenderer9-when-requesting-Vid.patch
  patch -p1 <../0009-quartz-Implement-IVMRMonitorConfig-interface-with-stub.patch
  patch -p1 <../0010-quartz-Implements-stubs-for-IAMCertifiedOutputProtecti.patch
  patch -p1 <../0011-winex11-Splitted-functions-X11DRV_FocusOut-and-X11DRV_.patch
  patch -p1 <../0012-winex11-Send-XEMBED_REQUEST_FOCUS-request-for-embedded.patch
  patch -p1 <../0013-winex11-Implement-additional-XEMBED_-events.patch
  patch -p1 <../0014-winex11-Update-gl_drawable-for-embedded-windows.patch

  autoreconf

  cd "$srcdir"

  if [[ $CARCH == x86_64 ]]; then

    msg2 "Building Wine-64..."
    mkdir $pkgname-64-build
    cd "$srcdir/$pkgname-64-build"
    ../$_upname/configure \
      --prefix=/$_prefix \
      --sysconfdir=/$_sysconf \
      --libdir=/$_prefix/lib \
      --with-x \
      --without-gstreamer \
      --enable-win64
    make

    _wine32opts=(
      --libdir=/$_prefix/lib32
      --with-wine64="$srcdir/$pkgname-64-build"
    )

    export PKG_CONFIG_PATH="/$_prefix/lib32/pkgconfig"
  fi

  msg2 "Building Wine-32..."
  cd "$srcdir/$pkgname-32-build"
  ../$_upname/configure \
    --prefix=/$_prefix \
    --sysconfdir=/$_sysconf \
    --with-x \
    --without-gstreamer \
    "${_wine32opts[@]}"

  # These additional flags solve FS#23277
  make CFLAGS+="-mstackrealign -mincoming-stack-boundary=2" CXXFLAGS+="-mstackrealign -mincoming-stack-boundary=2"
}

package() {
  msg2 "Packaging Wine-32..."
  cd "$srcdir/$pkgname-32-build"

  if [[ $CARCH == i686 ]]; then
    make prefix="$pkgdir/$_prefix" install
  else
    make prefix="$pkgdir/$_prefix" \
      libdir="$pkgdir/$_prefix/lib32" \
      dlldir="$pkgdir/$_prefix/lib32/wine" install

    msg2 "Packaging Wine-64..."
    cd "$srcdir/$pkgname-64-build"
    make prefix="$pkgdir/$_prefix" \
      libdir="$pkgdir/$_prefix/lib" \
      dlldir="$pkgdir/$_prefix/lib/wine" install
  fi

  # Font aliasing settings for Win32 applications
if [[ $customprefix != 1 ]]; then
  install -d "$pkgdir"/etc/fonts/conf.{avail,d}
  install -m644 "$srcdir/30-win32-aliases.conf" "$pkgdir/etc/fonts/conf.avail"
  ln -s ../conf.avail/30-win32-aliases.conf "$pkgdir/etc/fonts/conf.d/30-win32-aliases.conf"
fi

}
# vim:set ts=2 sw=2 tw=0 et:
