# Maintainer: X0rg

pkgname=darling-git
_gitname=darling
pkgver=591.b47e147
pkgrel=7
pkgdesc="A Wine-like emulation layer that enables you to run Darwin/OS X apps on Linux"
arch=('any')
url="http://darling.dolezel.info/en/Darling"
license=('GPL3')
depends=('gcc-libs' 'libxml2' 'gnutls' 'icu' 'cairo' 'libjpeg-turbo' 'libpng' 'libtiff' 'libbsd' 'systemd' 'lcms' 'openssl' 'bzip2' 'util-linux' 'ncurses' 'libxrandr' 'ffmpeg' 
	'libkqueue' 'gnustep-make-clang-svn' 'gnustep-libobjc2-clang-svn' 'gnustep-base-clang-svn' 'gnustep-gui-clang-svn' 'gnustep-corebase-clang-svn')
makedepends=('git' 'clang>=3.1' 'nasm' 'yasm')
optdepends=('dmg2dir-git: extract OS X application from .dmg file')
if [ "${CARCH}" = "x86_64" ]; then
optdepends=('dmg2dir-git: extract OS X application from .dmg file'
	'lib32-gnustep-clang-svn: provide Darling-multilib')
fi
backup=(etc/darling/dylib.conf)
install=darling.install
options=('!buildflags')
source=('git://github.com/LubosD/darling.git'
	'unistd.h')
#source=('git://github.com/crwulff/darling.git') #GitHub Fork, LubosD + others commits
#source=('git://github.com/X0rg/darling.git') #GitHub Fork, LubosD + add new librairies and frameworks 
md5sums=('SKIP'
         'a7e3d23ac8b3fc0d930af1a66f312338')

pkgver() {
  cd $_gitname
  echo $(git rev-list --count HEAD).$(git rev-parse --short HEAD)
}

prepare() {
  cd $_gitname
  if [[ $(locale -a | grep french) == "french" ]];then msg2 "Clone les submodules..."
  else
    msg2 "Clone submodules..."
  fi
  git submodule init
  git submodule update

  if [[ $(locale -a | grep french) == "french" ]];then msg2 "Créé le dossier 'build'..."
  else
    msg2 "Create 'build' directory..."
  fi
  mkdir -v ./build

  if [[ $(locale -a | grep french) == "french" ]];then msg2 "Place le fichier 'unistd.h' patché dans le répertoire '$srcdir/$_gitname/include'..."
  else
    msg2 "Move patched file 'unistd.h' in '$srcdir/$_gitname/include' directory..."
  fi
  cp -v "$srcdir/unistd.h" "./include"
}
 
build() {
  cd $_gitname/build
  source /etc/profile.d/GNUstep.sh

  if [[ $(locale -a | grep french) == "french" ]];then msg2 "Exécute 'cmake'..."
  else
    msg2 "Run 'cmake'..."
  fi
  CC=clang CXX=clang++ LDFLAGS="-L/usr/share/GNUstep/lib" cmake -DCMAKE_INSTALL_PREFIX=/usr -Wno-dev ..

  if [[ $(locale -a | grep french) == "french" ]];then msg2 "Exécute 'make'..."
  else
    msg2 "Run 'make'..."
  fi
  make
}

package() {
  cd $_gitname/build
  make DESTDIR=$pkgdir install

  if [[ $(locale -a | grep french) == "french" ]];then msg2 "Crée les nouveaux exécutables..."
  else
    msg2 "Create new executables..."
  fi
  mkdir -v -p $pkgdir/usr/share/$pkgname
  mv -v $pkgdir/usr/bin/dyld $pkgdir/usr/bin/motool $pkgdir/usr/share/$pkgname
  (set -x ; echo -e "#!/usr/bin/sh\n\nexport LD_LIBRARY_PATH=/usr/share/GNUstep/lib\n/usr/share/$pkgname/dyld \$@" > $pkgdir/usr/bin/dyld)
  (set -x ; echo -e "#!/usr/bin/sh\n\nexport LD_LIBRARY_PATH=/usr/share/GNUstep/lib\n/usr/share/$pkgname/motool \$@" > $pkgdir/usr/bin/motool)
  chmod -v --reference=$pkgdir/usr/share/$pkgname/dyld $pkgdir/usr/bin/dyld
  chmod -v --reference=$pkgdir/usr/share/$pkgname/motool $pkgdir/usr/bin/motool
}