# Maintainer: Piotr Rogoża <rogoza dot piotr at gmail dot com>
# Contributor: Piotr Rogoża <rogoza dot piotr at gmail dot com>
# Contributor: Arnoud Willemsen <mail at lynthium.com>
# vim:set ts=2 sw=2 et ft=sh tw=100: expandtab

pkgname=nginx-devel
_pkgname=nginx
# development version of nginx
pkgver=1.5.6
pkgrel=1
pkgdesc='Lightweight HTTP server and IMAP/POP3 proxy server - development version'
url="http://nginx.org"
arch=('i686' 'x86_64')
#{{{ Third party modules and patches
# naxsi: Application firewall
# see http://code.google.com/p/naxsi/
_naxsi_ver=0.51-1

# systemd socket activation support
# see http://trac.nginx.org/nginx/ticket/237

# http push module: This module turns Nginx into an adept HTTP Push and Comet server.
# see http://pushmodule.slact.net/
_push_ver=0.692

# concat: concatenate files in a given context: CSS and JS files usually
# see: http://wiki.nginx.org/HttpConcatModule https://github.com/alibaba/nginx-http-concat/tags
_concat_ver=1.2.2

# sflow: Operational performance monitoring with standard sFlow protoco
# see: http://nginx-sflow-module.googlecode.com/
_sflow_ver=0.9.7

# NgxFancyIndex(git): Like the built-in autoindex module, but fancier
# see: http://wiki.nginx.org/NgxFancyIndex

# ngx_http_auth_digest(git): HTTP Digest Authentication
# see: http://wiki.nginx.org/HttpAuthDigestModule

# ngx_http_auth_pam_module: HTTP Basic Authentication using PAM. 
# see: http://web.iti.upv.es/~sto/nginx/
_http_auth_pam_ver=1.2

# ngx_headers_more: Set and clear input and output headers...more than "add"! 
# see: http://wiki.nginx.org/HttpHeadersMoreModule
_headers_more_ver=0.22

# ModSecurity: Web application firewall
# see: http://www.modsecurity.org/projects/modsecurity/nginx/index.html
_modsecurity_ver=2.7.5

#}}}
#{{{ nginx env
_cfgdir=/etc/nginx
_tmpdir=/var/lib/nginx
_logdir=/var/log/nginx
_piddir=/run
_lockdir=/var/lock

_user=http
_group=http
#}}}
#{{{depends
depends=(
pcre
openssl
geoip
gd
libxslt
gperftools
) #}}}
#{{{makedepends
makedepends=(
passenger
geoip
libatomic_ops
gperftools
psol
) #}}}
#{{{ optdepends
optdepends=(
"sflowtool: analyzing sFlow data"
) #}}}
license=('custom')
#install='nginx.install'
#{{{backup
backup=(
etc/nginx/fastcgi.conf
etc/nginx/fastcgi_params
etc/nginx/koi-win
etc/nginx/koi-utf
etc/nginx/mime.types
etc/nginx/nginx.conf
etc/nginx/scgi_params
etc/nginx/uwsgi_params
etc/nginx/win-utf
etc/nginx/naxsi.rules
etc/nginx/naxsi_core.rules
etc/logrotate.d/nginx
) #}}}
changelog='CHANGES.pkgbuild.md'
#{{{source
source=(
http://nginx.org/download/${_pkgname}-$pkgver.tar.gz
http://naxsi.googlecode.com/files/naxsi-core-${_naxsi_ver}.tgz
nginx.service
nginx.logrotate
naxsi.rules
naxsi_core.rules
nginx.conf.example
socket.patch::http://trac.nginx.org/nginx/raw-attachment/ticket/237/0001-Socket-activation-support-for-systemd.patch
nginx.socket
concat-${_concat_ver}.tar.gz::https://github.com/alibaba/nginx-http-concat/archive/${_concat_ver}.tar.gz
http://nginx-sflow-module.googlecode.com/files/nginx-sflow-module-${_sflow_ver}.tar.gz
http://pushmodule.slact.net/downloads/nginx_http_push_module-${_push_ver}.tar.gz
http://web.iti.upv.es/~sto/nginx/ngx_http_auth_pam_module-${_http_auth_pam_ver}.tar.gz
headers_more-${_headers_more_ver}.tar.gz::https://github.com/agentzh/headers-more-nginx-module/archive/v${_headers_more_ver}.tar.gz
http://www.modsecurity.org/tarball/$_modsecurity_ver/modsecurity-apache_${_modsecurity_ver}.tar.gz
) #}}}
#{{{conflicts
conflicts=(
nginx
nginx-unstable
nginx-svn
nginx-socket
nginx-development-extra
nginx-spdy
) #}}}
provides=('nginx')

# build variables
_configure_params=()
# Additional functions, from nginx-development-extra, thx
add_module() { #{{{
  local module=$1 && shift
  local src=$1 && shift

  plain "* $module"

  if [[ "$src" == "github" ]]; then
    src=$(_add_github_module $module $@)
  elif [[ "$src" =~ ^(https?|ftp):// ]]; then
    src=$(_add_external_module $module $src)
  elif [[ "$src" =~ ^git:// ]]; then
    src=$(_add_git_module $module $src $@)
  fi

  if [ -d "$src" ]; then
    _configure_params+=(--add-module=$src)
  fi
} #}}}
_add_external_module() { #{{{
  local module=$1
  local src=$2

  [ -d "$module" ] || curl --silent $src | tar -xz

  echo "$(cd "$module" && pwd)"
} #}}}
_add_github_module() { #{{{
  local module=$1
  local github_user=$2
  local branch=$3

  [ -d "./$module/.git" ] || git clone -q git://github.com/$github_user/$module.git
  [ -n "$branch" ] && (cd $module && git checkout -q $branch)

  echo "$(cd "$module" && pwd)"
} #}}}
_add_git_module() { #{{{
  local module=$1
  local src=$2
  local branch=$3

  [ -d "./$module/.git" ] || git clone -q $src $module
  [ -n "$branch" ] && (cd $module && git checkout -q $branch)
  echo "$(cd "$module" && pwd)"
} #}}}
build() { #{{{
	cd "$srcdir"/${_pkgname}-$pkgver
  msg2 "Adding optional systemd socket activation support"
  patch -Np1 -i "$srcdir/socket.patch"

  #{{{ build options
  _configure_params=(
    --prefix=$_cfgdir
    --sbin-path=/usr/bin/nginx
    --conf-path=$_cfgdir/nginx.conf
    --error-log-path=$_logdir/error.log
    --pid-path=$_piddir/nginx.pid
    --lock-path=$_lockdir/nginx.lock

    --user=$_user
    --group=$_group

    --with-file-aio
    --with-ipv6
  
    --http-log-path=$_logdir/access.log
    --http-client-body-temp-path=$_tmpdir/client-body
    --http-proxy-temp-path=$_tmpdir/proxy
    --http-fastcgi-temp-path=$_tmpdir/fastcgi
    --http-uwsgi-temp-path=$_tmpdir/uwsgi
    --http-scgi-temp-path=$_tmpdir/scgi

    --with-debug
    --with-libatomic
    --with-pcre
    --with-pcre-jit
  )
  #}}}
  #{{{ Core modules
  _configure_params+=(
    --with-rtsig_module
    --with-select_module
    --with-poll_module
  )
  #}}}
  #{{{ Optional HTTP modules
  _configure_params+=(
    --with-http_addition_module
    --with-http_degradation_module
    --with-http_perl_module
    --with-http_flv_module
    --with-http_gzip_static_module
    --with-http_image_filter_module
    --with-http_mp4_module
    --with-http_random_index_module
    --with-http_realip_module
    --with-http_secure_link_module
    --with-http_stub_status_module
    --with-http_sub_module
    --with-http_dav_module
    --with-http_gunzip_module

    --with-ld-opt="-lstdc++"
    --with-cpp_test_module

    --with-http_xslt_module
    --with-http_ssl_module
    --with-google_perftools_module
    --with-http_geoip_module
  )
  #}}}
  #{{{ Mail modules
  _configure_params+=(
    --with-mail
    --with-mail_ssl_module
    --with-imap
    --with-imap_ssl_module
  )
  #}}}
  #{{{ Additional modules from various patch
  _configure_params+=(
    --with-http_spdy_module
  )
  #}}}
  
  _modulesdir="$srcdir/modules"

  msg2 "Configuring modules"

  mkdir -p $_modulesdir
  cd $_modulesdir

  # passenger
  add_module "passenger" "/usr/lib/passenger/ext/nginx"
  # naxsi 
  add_module "naxsi-${_naxsi_ver}" "$srcdir/naxsi-core-${_naxsi_ver}/naxsi_src"
  # push
  add_module "nginx_http_push_module-${_push_ver}" "$srcdir/nginx_http_push_module-${_push_ver}"
  # concat module
  add_module "concat-${_concat_ver}" "$srcdir/nginx-http-concat-${_concat_ver}"
  # pagespeed
  add_module "pagespeed-git" "git://github.com/pagespeed/ngx_pagespeed.git"
  ## symlink psol library to pagespeed
  if [ ! -L "$_modulesdir/pagespeed-git/psol" ]; then 
    ln -s /usr/lib/psol $_modulesdir/pagespeed-git/psol
  fi
  # sflowtool
  add_module "sflowtool-${_sflow_ver}" "$srcdir/nginx-sflow-module-${_sflow_ver}"
  # NgxFancyIndex
  add_module "fancyindex-git" "git://gitorious.org/ngx-fancyindex/ngx-fancyindex.git"
  # ngx_http_auth_digest
  add_module 'http_auth_digest-git' 'git://github.com/samizdatco/nginx-http-auth-digest'
  # ngx_http_auth_pam
  add_module "http_auth_pam-${_http_pam_ver}" "$srcdir/ngx_http_auth_pam_module-${_http_auth_pam_ver}"
  # ngx_headers_more
  add_module "headers_more-${_headers_more_ver}" "$srcdir/headers-more-nginx-module-${_headers_more_ver}"
  # modsecurity
  add_module "modsecurity-$_modsecurity_ver" \
    "modsecurity-apache_${_modsecurity_ver}/nginx/modsecurity"


	cd "$srcdir"/${_pkgname}-$pkgver
  ./configure ${_configure_params[*]}
  make
} #}}}
package() { #{{{
  cd "$srcdir/${_pkgname}-${pkgver}"
  make DESTDIR="$pkgdir" install

  sed -e 's|\<user\s\+\w\+;|user html;|g' \
    -e '44s|html|/usr/share/nginx/html|' \
    -e '54s|html|/usr/share/nginx/html|' \
    -i "$pkgdir"/etc/nginx/nginx.conf
  rm "$pkgdir"/etc/nginx/*.default

  install -d "$pkgdir"/$_tmpdir
	install -dm700 "$pkgdir"/$_tmpdir/proxy

	chmod 750 "$pkgdir"/$_logdir
	chown http:log "$pkgdir"/$_logdir

  install -d "$pkgdir"/usr/share/nginx
  mv "$pkgdir"/etc/nginx/html/ "$pkgdir"/usr/share/nginx

  install -Dm644 "$srcdir"/nginx.logrotate "$pkgdir"/etc/logrotate.d/nginx
  install -Dm644 "$srcdir"/nginx.service "$pkgdir"/usr/lib/systemd/system/nginx.service
  install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/nginx-devel/LICENSE
  install -Dm644 "$srcdir"/nginx.socket "$pkgdir"/usr/lib/systemd/system/nginx.socket
  rmdir "$pkgdir"/run

  #man
  install -Dm644 "$srcdir"/${_pkgname}-$pkgver/man/nginx.8 "$pkgdir"/usr/share/man/man8/nginx.8
  
  #naxsi
  install -Dm644 "$srcdir"/naxsi_core.rules "$pkgdir"/${_cfgdir}/naxsi_core.rules
  install -Dm644 "$srcdir"/naxsi.rules "$pkgdir"/${_cfgdir}/naxsi.rules
  
  install -Dm644 "$srcdir"/nginx.conf.example "$pkgdir"/${_cfgdir}/nginx.conf.example
} #}}}

md5sums=('376227934b82ecaca39784990ca4e8ff'
         'd8c59b63b0091698c1986b281d72a112'
         'ce9a06bcaf66ec4a3c4eb59b636e0dfd'
         'd7f84ca51ef0a8a343a6ce9d6dd74162'
         '8510ce5ff8d3a7a710fa42e127651594'
         'cf67e931f4263830189196b2d8560502'
         '3a23f1f2478abb5847a8042a0c3b747b'
         'a79a2e34f4197391356a7a92584481b0'
         '5981d95bb07ca3e1f3640118199c219d'
         '490d9705b7461e4c58cf28bd7fee3040'
         '3865965855620c265e9b5dd61a74a44f'
         'a948638005669d159fa331a35c066fae'
         '3f6322663c6479a7b6b974bfa7417e5c'
         'd065fa0fa751ed103d2fceed3a79ae58'
         'ef471f4e126c34bf4d214103402a24ee')
