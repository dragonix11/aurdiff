# Maintainer: dreieck
# Contributor: radioxoma

pkgname="fiji-binary"
pkgver="20130715"
pkgrel="4"
pkgdesc="An image processing package: A distribution of ImageJ (and soon ImageJ2) together with a lot of plugins organized into a coherent menu structure. Targeted to scientists and especially biology related workflows. Can work with image/z-stack videos."
arch=('i686' 'x86_64')
url='http://fiji.sc/'
license=('GPL')
_licenses_plugins=('GPL' 'AL' 'SPL' 'LGPL' 'EPL' 'GPL2' 'PD' 'BIG' 'imagescience' 'BSD' 'AGPL' 'MPL1.1' 'CPL' 'PSF2' 'JSF2.1' 'JPSL' 'BSD-like' 'CPL1.0' 'BSDR' 'Citationware') ## Each component has it's individual license, but the AUR does not allow such a big license array ("Error - Package license cannot be greater than 40 characters"), so they are listed in this variable just for information purposes. (The PKGBUILD does not deal with that variable at all.)
depends=('java-runtime>=6')
optdepends=('java3d: For the 3D viewer plugin.')
provides=("fiji=${pkgver}")
replaces=("fiji<=${pkgver}")
# conflicts=("fiji")
source=(
        "http://fiji.sc/downloads/Life-Line/fiji-nojre-${pkgver}.zip"
        # "http://jenkins.imagej.net/job/Stable-Fiji/lastSuccessfulBuild/artifact/fiji-nojre.zip" ## This one is the "continuous build".
       )
md5sums=(
         'abdcbf387ccd76015558ccfcc0b79d29'
        )

_userexecutable="fiji" # That name to be presented to the user.

_executablebase="ImageJ-linux"
if test "$CARCH" == "x86_64"; then
  _executable="${_executablebase}64"
else
  _executable="${_executablebase}"
fi

build()
{
  _extractdir="${srcdir}/Fiji.app"

  cd "${_extractdir}" || exit 11
  _removefrompackage=('Contents' 'ImageJ-linux32' 'ImageJ-linux64' 'ImageJ-win32.exe' 'ImageJ-win64.exe') # Remove executables not suiting our architecture, and an ampty dir.
  _executablebak="$(mktemp)" || exit 21 # Save the executable matching our architecture.
  echo "${_executable}" "${_executablebak}"
  cp "${_executable}" "${_executablebak}" || exit 31
  rm -Rf "${_removefrompackage[@]}" || exit 41
  mv "${_executablebak}" "${_executable}" || exit 51
  chmod a+x "${_executable}" || exit 56
  ln -sf "${_executable}" "${_userexecutable}" || exit 61
}

package()
{
  _extractdir="${srcdir}/Fiji.app"

  _targetdirinrootfs="opt/fiji"
  _targetdir="${pkgdir}/${_targetdirinrootfs}"
  _bindir="${pkgdir}/usr/bin"
  mkdir -p "${_targetdir}" || exit 111
  mkdir -p "${_bindir}" || exit 116
  cp -afv "${_extractdir}"/* "${_targetdir}" || exit 121
  chown -R root:root "${_targetdir}" || true
  cd "${_bindir}" || exit 125
  # ln -sf "${_targetdir}/${_userexecutable}" "${_bindir}/${_userexecutable}" || exit 131 # We do NOT create a executable "fiji" in the PATH, since one may want to create a custum /usr/local/bin/fiji for setting JAVA_HOME to the SUN/Oracle java. Instead, we name the executable associated with the architecture, and have "fiji" in the /opt-dir.
  ln -sf "${_targetdirinrootfs}/${_executable}" "${_executable}" || exit 135
}
