
# Maintainer: Gustavo Alvarez <sl1pkn07@gmail.com>
# Based on Gentoo v8.ebuild (http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/dev-lang/v8/)

pkgname=v8-dev
_pkgname=v8
pkgver=3.21.4
pkgrel=1
pkgdesc='Fast and modern Javascript engine (Dev Channel)'
arch=('i686' 'x86_64')
url='http://code.google.com/p/v8'
license=('BSD')
conflicts=('v8')
provides=('v8')
depends=('gcc-libs' 'readline')
makedepends=('subversion' 'python2')
source=("https://gsdview.appspot.com/chromium-browser-official/${_pkgname}-${pkgver}.tar.bz2")
sha1sums=('8160ea85868805d899b3566330b542e552d84207')

[ "$CARCH" = 'i686' ] && _arch="ia32"
[ "$CARCH" = 'x86_64' ] && _arch="x64"

prepare() {
  cd "${srcdir}"
  rm -fr {v8,out}
  mv "v8-${pkgver}" "${_pkgname}"
}

build() {
  cd "${_pkgname}"

  # Fix to really use python2.
  rm -rf "${srcdir}/python"
  mkdir "${srcdir}/python"
  ln -s /usr/bin/python2 "${srcdir}/python/python"
  export PATH="${srcdir}/python":$PATH
  find . -type f -exec sed -i -r -e 's|/usr/bin/python$|&2|g' -e 's|(/usr/bin/python2)\.4$|\1|g' {} \;

  # Enables readline support for the d8 shell
  _flags+=" -Dconsole=readline"

  # Always build v8 as a shared library with proper SONAME.
  _flags+=" -Dcomponent=shared_library -Dsoname_version=${pkgver}"

  # Set up architecture to build
  [ "$CARCH" = 'i686' ] && _flags+=" -Dv8_target_arch=${_arch}"
  [ "$CARCH" = 'x86_64' ] && _flags+=" -Dv8_target_arch=${_arch}"

  # Make sure that -Werror doesn't get added to CFLAGS by the build system.
  # Depending on GCC version the warnings are different and we don't
  # want the build to fail because of that.
  _flags+=" -Dwerror="

  # gyp does this only for linux, but we always want to use "out" dir, or
  # all else below fails due to not finding "out" dir.
  _flags+=" --generator-output=out"

  # gyp defaults to whatever makes the most sense on the platform at hand,
  # but we want to build using Makefiles, so force that.
  _flags+=" -f make"

  build/gyp_v8 --depth=. ${_flags}

  make -C out builddir="${srcdir}/v8/out/Release" V=1 BUILDTYPE=Release "mksnapshot.${_arch}"
  make -C out builddir="${srcdir}/out/Release" V=1 BUILDTYPE=Release
}

check() {
  LD_LIBRARY_PATH=out/Release/lib.target python2 v8/tools/run-tests.py \
                -j$(nproc) \
                --no-presubmit \
                --outdir="${srcdir}/out" \
                --buildbot \
                --arch=native \
                --mode=Release \
                --progress=dots
}

package() {
  cd "${_pkgname}"

  install -Dm755 "${srcdir}/out/Release/d8" "${pkgdir}/usr/bin/d8"
  install -Dm755 "${srcdir}/out/Release/lib.target/libv8.so.${pkgver}" "${pkgdir}/usr/lib/libv8.so.${pkgver}"
  ln -s "/usr/lib/libv8.so.${pkgver}" "${pkgdir}/usr/lib/libv8.so"

  for i in $(find include -type f); do install -Dm644 "${i}" "${pkgdir}/usr/${i}"; done
  for i in $(find . -maxdepth 1 -name "LICENSE*"); do install -Dm644 "${i}" "${pkgdir}/usr/share/licenses/v8-dev/${i}"; done
}
