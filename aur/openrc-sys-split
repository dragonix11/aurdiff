# Maintainer: udeved <udeved@openrc4arch.site40.net>

# file vars for easy update
_Cacpi=acpid-2.0.16-conf.d
_Iacpi=acpid-2.0.16-init.d
_Ick=consolekit-0.2.rc
_Sck=90-consolekit-3
_Ccpu=conf.d-r2
_Icpu=init.d-r3
_Icron=(cronie-1.3-initd anacron-1.0-initd)
_Ccrypt=1.0.6-dmcrypt.confd
_Icrypt=1.5.1-dmcrypt.rc
_Idbus=dbus.initd
_Inscd=nscd
_Csens=sensord-conf.d
_Isens=(sensord-4-init.d fancontrol-init.d-2 lm_sensors-3-init.d)
_Cdm=device-mapper.conf-1.02.22-r3
_Idm=(device-mapper.rc-2.02.95-r2 dmeventd.initd-2.02.67-r1)
_Clvm=lvm.confd-2.02.28-r2
_Ilvm=(lvm.rc-2.02.95-r2 lvm-monitoring.initd-2.02.67-r2)
_Cmdadm=mdadm.confd
_Imdadm=mdadm.rc
_Csyslog=syslog-ng.confd
_Isyslog=syslog-ng.rc6.3.3
_Cxdm=xdm.confd-4
_Ixdm=(xdm.initd-10 xdm-setup.initd-1)
_Sxdm=startDM.sh

_gentoo_uri="http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86"

pkgbase=openrc-sys-split
pkgname=openrc-sys-split
true && pkgname=('acpid-openrc' 'consolekit-openrc' 'cpupower-openrc' 'cronie-openrc' 'cryptsetup-openrc' 'dbus-openrc' 'device-mapper-openrc' 'glibc-openrc' 'lm_sensors-openrc' 'lvm2-openrc' 'mdadm-openrc'
		'syslog-ng-openrc' 'displaymanager-openrc' 'openrc-sys-split')
pkgver=20131030
pkgrel=1
pkgdesc="OpenRC init scripts"
arch=('any')
url="http://openrc4arch.site40.net"
license=('GPL2')
groups=('openrc' 'openrc-sys')
makedepends=('acpid' 'consolekit' 'cpupower' 'cronie' 'cryptsetup' 'dbus' 'device-mapper' 'glibc' 'lm_sensors' 'lvm2' 'mdadm' 'syslog-ng' 'xorg-server')
conflicts=('openrc-arch-services-git' 'initscripts' 'systemd-sysvcompat' 'openrc' 'openrc-git')
source=("${_gentoo_uri}/sys-power/acpid/files/${_Cacpi}"
	"${_gentoo_uri}/sys-power/acpid/files/${_Iacpi}"
	"${_gentoo_uri}/sys-auth/consolekit/files/${_Ick}"
	"${_gentoo_uri}/sys-auth/consolekit/files/${_Sck}"
	"${_gentoo_uri}/sys-power/cpupower/files/${_Ccpu}"
	"${_gentoo_uri}/sys-power/cpupower/files/${_Icpu}"
	"${_gentoo_uri}/sys-process/cronie/files/${_Icron[0]}"
	"${_gentoo_uri}/sys-process/cronie/files/${_Icron[1]}"
	"${_gentoo_uri}/sys-fs/cryptsetup/files/${_Ccrypt}"
	"${_gentoo_uri}/sys-fs/cryptsetup/files/${_Icrypt}"
	"${_gentoo_uri}/sys-apps/dbus/files/${_Idbus}"
	"${_gentoo_uri}/sys-libs/glibc/files/${_Inscd}"
	"${_gentoo_uri}/sys-apps/lm_sensors/files/${_Csens}"
	"${_gentoo_uri}/sys-apps/lm_sensors/files/${_Isens[0]}"
	"${_gentoo_uri}/sys-apps/lm_sensors/files/${_Isens[1]}"
	"${_gentoo_uri}/sys-apps/lm_sensors/files/${_Isens[2]}"
	"${_gentoo_uri}/sys-fs/lvm2/files/${_Cdm}"
	"${_gentoo_uri}/sys-fs/lvm2/files/${_Idm[0]}"
	"${_gentoo_uri}/sys-fs/lvm2/files/${_Idm[1]}"
	"${_gentoo_uri}/sys-fs/lvm2/files/${_Clvm}"
	"${_gentoo_uri}/sys-fs/lvm2/files/${_Ilvm[0]}"
	"${_gentoo_uri}/sys-fs/lvm2/files/${_Ilvm[1]}"
	"${_gentoo_uri}/sys-fs/mdadm/files/${_Cmdadm}"
	"${_gentoo_uri}/sys-fs/mdadm/files/${_Imdadm}"
	"${_gentoo_uri}/app-admin/syslog-ng/files/${_Csyslog}"
	"${_gentoo_uri}/app-admin/syslog-ng/files/${_Isyslog}"
	"${_gentoo_uri}/x11-base/xorg-server/files/${_Cxdm}"
	"${_gentoo_uri}/x11-base/xorg-server/files/${_Ixdm[0]}"
	"${_gentoo_uri}/x11-base/xorg-server/files/${_Ixdm[1]}"
	"${_gentoo_uri}/x11-apps/xinit/files/${_Sxdm}")

sha256sums=('3755d4eb8bb64a1304e5defedb949305ac550565da36fe4f94d5f31beee821ba'
            '980468e6bf96c7677898330cadbcff165b4d15f1197cd544548bd0f8c376983d'
            'da849bae527a7a5c257301a99ac3fb5ec2ded48103ec114552ca7d2a24b12e49'
            '91e0900995f7db536220065959d236fb75ec2c77096981a142e2e948518d9761'
            '9ab6f022d2b2948660decf5e383984e6ddb9e9e5e6e2761c3031378ddd87e947'
            'aa16c3190d26aca6c0a3f69cc929e3571df3da0b3ec7b45fe19a216fe912fa6f'
            '0954be9e1e1c34d2f963cc60828b63711a2949bfe91f65620caf9c80256383f2'
            '862c85322f3644997ca5432180e0ef0a4fb36467a44b350dc955365f314b2fbe'
            '0c30e081c0b8f879964ae49735f10b05a1d92f4f481042851958860945e13271'
            '02faf27470ea0e50b764c923786724847e77dfdf9680a50cc202546cad2bf02f'
            '98e37b8b6ed25004e48c5855d74c9361eea06d3fee13cefcc0ed10ccf452aa01'
            '6165db3a2fcb251d4f3655c0461e018ce9c92a37f7f22a8fd2b75178b5435bc8'
            '02230edf5efbb0a4de3840cd76f9ebf431c57a246fa7388e9dbeb0fe26fe7b8d'
            '4bd482a54decc5a51aee60e19ae31b0182d5857b112754247f04c0829b159b07'
            '36d489296c31736f8015b0ce27052b3f1555b7fe6335120c0477b044b8e4fb8d'
            '9b018f9f7a0975988387858823fe59a5cd8af6413d8c3170db0e24aac6021ec3'
            '57777904f12a35617e5a4193c964ebb32396452487fd02353e71e16e7b46bc22'
            'e0bff689040746480e2479d1ad57adb5ab23cc0415ab9a8356503aed7a14c658'
            'dbf81d357446fa555bcd75939af6d5982c10a8235800ddc299d2673b2c694d39'
            '28370c089c39c248d7ded0960b8d8a9256bada44d44c22ce3cec87d512ef6844'
            '66844a70cedf61b2cd3373cdbd8f8c1afa817bde0764fdf5cf488857532d4553'
            'b89971a4f163e1a91df2416ff442cae7209f8343e6c8612eb3174ed8f5c5c788'
            'ec55674955af7a31da51b8b72b599e8519809287dad796a9b16155bcba471b79'
            '3073b14619cb7b2c99c33f2d6cfd1e59ce5557899bffebaa65fa52f3caffadc7'
            '8319ca8e39a5dab5ddc82eede088e1f58ff25deef330804648000359cb736a3f'
            '19bbd35abc9f54ce368e1ccf46b6e4af6eec304906e432bb9968d50a01d18284'
            '9d26b72bb28611a60a6b9f942b8d8cfe47b59f926be89af9709b5912668344d8'
            '85e5778e23748c6a6285fdadaeb18e6c04b3fdf98d2a81f0ab9d854dbac8076c'
            '942ce5e8d1a0770543b683dcc388bae7619a24eb9741c1cd678ed3df97c01406'
            'e7f2d95b3b4b6b5d711f926f8a3b7b0163b4d9e40b40489bcbd1316806e47499')

# pkgver() {
#   date +%Y%m%d
# }

_shebang='s|#!/sbin/runscript|#!/usr/bin/runscript|'
_runpath='s|/var/run|/run|g'
_binpath='s|/usr/sbin|/usr/bin|g'
_binpath2='s|/sbin|/usr/bin|g'

package_acpid-openrc() {
	true
	pkgdesc="OpenRC acpid init script"
	depends=('openrc-base' 'acpid')
	backup=('etc/conf.d/acpid')
	install=acpid.install

	install -Dm755 "${srcdir}/${_Cacpi}" "${pkgdir}/etc/conf.d/acpid"
	install -Dm755 "${srcdir}/${_Iacpi}" "${pkgdir}/etc/init.d/acpid"

	sed -e "${_shebang}" -e "${_binpath}" -i "${pkgdir}/etc/init.d/acpid"
}

package_consolekit-openrc() {
	true
	pkgdesc="OpenRC consolekit init script"
	depends=('openrc-base' 'consolekit')
	install=consolekit.install

	install -Dm755 "$srcdir/${_Sck}" "$pkgdir/etc/X11/xinit/xinitrc.d/90-consolekit"

	install -Dm755 "$srcdir/${_Ick}" "$pkgdir/etc/init.d/consolekit"

	sed -e "${_shebang}" -e "${_runpath}" -e "${_binpath}" -i "${pkgdir}/etc/init.d/consolekit"
}

package_cpupower-openrc() {
	true
	pkgdesc="OpenRC cpupower init script"
	depends=('openrc-base' 'cpupower')
	backup=('etc/conf.d/cpupower')
	install=cpupower.install

	install -Dm755 "${srcdir}/${_Ccpu}" "${pkgdir}/etc/conf.d/cpupower"
	install -Dm755 "${srcdir}/${_Icpu}" "${pkgdir}/etc/init.d/cpupower"

	sed -e "${_shebang}" -i "${pkgdir}/etc/init.d/cpupower"
}

package_cronie-openrc() {
	true
	pkgdesc="OpenRC cronie init script"
	depends=('openrc-base' 'cronie')
	provides=('openrc-cron')
	conflicts=('fcron' 'fcron-openrc' 'openrc-arch-services-git'
		  'initscripts' 'systemd-sysvcompat' 'openrc' 'openrc-git')
	backup=('etc/init.d/cronie')
	install=cronie.install

	install -Dm755 "${srcdir}/${_Icron[0]}" "${pkgdir}/etc/init.d/cronie"
	install -Dm755 "${srcdir}/${_Icron[1]}" "${pkgdir}/etc/init.d/anacron"

	for f in ${pkgdir}/etc/init.d/*;
	do
	  sed -e "${_shebang}" -e "${_binpath}" -e "${_runpath}" -i $f
	done
}

package_dbus-openrc() {
	true
	pkgdesc="OpenRC dbus init script"
	depends=('openrc-base' 'dbus')
	install=dbus.install

	install -Dm755 "${srcdir}/${_Idbus}" "${pkgdir}/etc/init.d/dbus"

	local _p1='s|dbus.pid|dbus/pid|g'
	sed -e "${_shebang}" -e "${_runpath}" -e "${_p1}" -i "${pkgdir}/etc/init.d/dbus"
}

package_device-mapper-openrc() {
	true
	pkgdesc="OpenRC device-mapper init script"
	depends=('openrc-base' 'device-mapper')
	backup=('etc/conf.d/device-mapper')
	install=device-mapper.install

	install -Dm755 "${srcdir}/${_Cdm}" "${pkgdir}/etc/conf.d/device-mapper"
	install -Dm755 "${srcdir}/${_Idm[0]}" "${pkgdir}/etc/init.d/device-mapper"
	install -Dm755 "${srcdir}/${_Idm[1]}" "${pkgdir}/etc/init.d/dmeventd"

	for f in ${pkgdir}/etc/init.d/*;
	do
	  sed -e "${_shebang}" -e "${_binpath2}" -e "${_runpath}" -i $f
	done
}

package_cryptsetup-openrc() {
	true
	pkgdesc="OpenRC cryptsetup init script"
	depends=('cryptsetup' 'device-mapper-openrc')
	backup=('etc/conf.d/dmcrypt')
	install=cryptsetup.install

	install -Dm755 "${srcdir}/${_Ccrypt}" "${pkgdir}/etc/conf.d/dmcrypt"
	install -Dm755 "${srcdir}/${_Icrypt}" "${pkgdir}/etc/init.d/dmcrypt"

	sed -e "${_shebang}" -e "${_binpath}" -e "${_runpath}" -i "${pkgdir}/etc/init.d/dmcrypt"
}

package_displaymanager-openrc() {
	true
	pkgdesc="OpenRC dm init script"
	depends=('openrc-base' 'xorg-server')
	optdepends=('consolekit-openrc' 'dbus-openrc')
	backup=('etc/conf.d/xdm')
	install=displaymanager.install

	install -Dm755 "${srcdir}/${_Cxdm}" "${pkgdir}/etc/conf.d/xdm"
	install -Dm755 "${srcdir}/${_Ixdm[0]}" "${pkgdir}/etc/init.d/xdm"
	install -Dm755 "${srcdir}/${_Ixdm[1]}" "${pkgdir}/etc/init.d/xdm-setup"
	install -Dm755 "${srcdir}/${_Sxdm}" "${pkgdir}/etc/X11/startDM.sh"

	local _p1='s|/etc/profile.env|/etc/profile|g' \
	_p2='s|{ROOTPATH}|{PATH}|g'
	sed -e "${_shebang}" -e "${_binpath}" -e "${_runpath}" -e "${_p1}" -e "${_p2}" -i "${pkgdir}/etc/init.d/xdm"
	sed -e "${_shebang}" -i "${pkgdir}/etc/init.d/xdm-setup"
}

package_glibc-openrc() {
	true
	pkgdesc="OpenRC nscd init script"
	depends=('openrc-base' 'glibc')
	optdepends=('openldap-openrc' 'bind-openrc')
	install=glibc.install

	install -Dm755 "${srcdir}/${_Inscd}" "${pkgdir}/etc/init.d/nscd"

	sed -e "${_shebang}" -e "${_binpath}" -e "${_runpath}" -i "${pkgdir}/etc/init.d/nscd"
}

package_lm_sensors-openrc() {
	true
	pkgdesc="OpenRC lm_sensors init script"
	depends=('openrc-base' 'lm_sensors')
	backup=('etc/conf.d/sensord')
	install=lm_sensors.install

	install -Dm755 "${srcdir}/${_Csens}" "${pkgdir}/etc/conf.d/sensord"
	install -Dm755 "${srcdir}/${_Isens[0]}" "${pkgdir}/etc/init.d/sensord"
	install -Dm755 "${srcdir}/${_Isens[1]}" "${pkgdir}/etc/init.d/fancontrol"
	install -Dm755 "${srcdir}/${_Isens[2]}" "${pkgdir}/etc/init.d/lm_sensors"

	for f in ${pkgdir}/etc/init.d/*;
	do
	  sed -e "${_shebang}" -e "${_binpath}" -e "${_runpath}" -i $f
	done
}

package_lvm2-openrc() {
	true
	pkgdesc="OpenRC lvm2 init script"
	depends=('lvm2' 'device-mapper-openrc')
	backup=('etc/conf.d/lvm')
	install=lvm2.install

	install -Dm755 "${srcdir}/${_Clvm}" "${pkgdir}/etc/conf.d/lvm"
	install -Dm755 "${srcdir}/${_Ilvm[0]}" "${pkgdir}/etc/init.d/lvm"
	install -Dm755 "${srcdir}/${_Ilvm[1]}" "${pkgdir}/etc/init.d/lvm-monitoring"

	for f in ${pkgdir}/etc/init.d/*;
	do
	  sed -e "${_shebang}" -e "${_binpath2}" -e "${_runpath}" -i $f
	done
}

package_mdadm-openrc() {
	true
	pkgdesc="OpenRC mdadm init script"
	depends=('openrc-base' 'mdadm')
	optdepends=('bind-openrc')
	backup=('etc/conf.d/mdadm')
	install=mdadm.install

	install -Dm755 "${srcdir}/${_Cmdadm}" "${pkgdir}/etc/conf.d/mdadm"
	install -Dm755 "${srcdir}/${_Imdadm}" "${pkgdir}/etc/init.d/mdadm"

	sed -e "${_shebang}" -e "${_runpath}" -i "${pkgdir}/etc/init.d/mdadm"
}

package_syslog-ng-openrc() {
	true
	pkgdesc="OpenRC syslog-ng init script"
	depends=('openrc-base' 'syslog-ng')
	backup=('etc/conf.d/syslog-ng')
	install=syslog-ng.install

	install -Dm755 "${srcdir}/${_Csyslog}" "${pkgdir}/etc/conf.d/syslog-ng"
	install -Dm755 "${srcdir}/${_Isyslog}" "${pkgdir}/etc/init.d/syslog-ng"

	sed -e "${_shebang}" -e "${_binpath}" -e "${_runpath}" -i "${pkgdir}/etc/init.d/syslog-ng"
}

# Comment out if you build for your personal repo
# remove 'openrc-sys-split' from pkgname array
# Dummy package to make AUR display correct info
# If installed, it should make upgrade from AUR possible
package_openrc-sys-split() {
	true
	pkgdesc="OpenRC sys init scripts, AUR upgrade and info split-pkg helper"
	depends=('openrc-base')
	provides=("openrc-sys-split-helper=${pkgver}")
}
