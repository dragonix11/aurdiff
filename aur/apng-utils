# Maintainer: Joerg Schuck <joerg_schuck at web dot de>
# Contributor: Tyler <tjb0607 at gmail dot com>
# Contributor: Austin <doorknob60 at gmail dot com>
pkgname=apng-utils
pkgver=2.8
_apngdis_pkgver=2.5
_apngasm_pkgver=2.8
_gif2apng_pkgver=1.8
_apng2gif_pkgver=1.5
pkgrel=1
pkgdesc="apngasm for assembling apng files, apngdis for disassembling apng files, and gif2apng/apng2gif for converting."
arch=('i686' 'x86_64')
url="http://sourceforge.net/projects/apngdis/"
# apngasm: http://sourceforge.net/projects/apngasm/
# gif2apng: http://sourceforge.net/projects/gif2apng/
# apng2gif: http://sourceforge.net/projects/apng2gif/
provides=( apngasm apngdis gif2apng apng2gif)
license=('LGPL')
depends=( 'libpng' 'gcc-libs' )
source=("http://sourceforge.net/projects/apngdis/files/${_apngdis_pkgver}/apngdis-${_apngdis_pkgver}-src.zip"
        "http://sourceforge.net/projects/apngasm/files/${_apngasm_pkgver}/apngasm-${_apngasm_pkgver}-src.zip"
        "http://sourceforge.net/projects/gif2apng/files/${_gif2apng_pkgver}/gif2apng-${_gif2apng_pkgver}-src.zip"
        "http://sourceforge.net/projects/apng2gif/files/${_apng2gif_pkgver}/apng2gif-${_apng2gif_pkgver}-src.zip"
	gif2apng-Makefile.patch
)

noextract=( "gif2apng-${_gif2apng_pkgver}-src.zip" "apngasm-${_apngasm_pkgver}-src.zip" )

build() {
  cd "${srcdir}"
  
  gcc -O2 -o apngdis apngdis.c -lz 
  gcc -O2 -lz apng2gif.c -o apng2gif 

  # Several packages now use a different build approach than before.
  for _pack in "${noextract[@]}"; do
        _builddir=${_pack%%-*}
	mkdir $_builddir
  	bsdtar xf "${_pack}" --directory $_builddir
  
  	cd $_builddir
	if [ "$_pack" == "${noextract[0]}" ]; then
  		patch -p1 Makefile ../gif2apng-Makefile.patch
	fi
  	make ${MAKEFLAGS}
	
	cd "${srcdir}"
  done	
}

package() {
  cd "${srcdir}"
  install -d "$pkgdir/usr/bin/"
  install -Dm755 apngdis "$pkgdir/usr/bin/"
  install -Dm755 apng2gif "$pkgdir/usr/bin/"
  for _pack in "${noextract[@]}"; do
	_builddir=${_pack%%-*}
  	install -Dm755 "$_builddir/$_builddir" "$pkgdir/usr/bin/"
  done
}
md5sums=('8a38fdf3d375e5615ce5fe348d478a9d'
         'c25094450aefdf98cebc7fc6fd5bf967'
         'f6529a7bb1dc7b56a4fa910305839cea'
         'e7a2a745ac26c7528ff7580e1cb6f4be'
         'af8f711b7aeca8d6645d4e6e4e5a02f1')
sha256sums=('684ef8da1688c8fdb1a3dfe742fcf344bfff23b701fb31cea2ece7b2a272faec'
            '47bee31bc149efc5932a87819cc0daea668cf7322eeaed9378c43edbdc9803bc'
            '7ef4030dcfaaa5a0cba759d78d3b15c783902dce3aefeb1e8d7d5a6cfacbb639'
            '024d9f042691216f74d39cec308c447531bd67bee0fab33b32990163559d4978'
            '9c75a44a5087e3c34f0b34e177aa442dec0ca3b6f1e7b1bfcfda115ddbf6203a')
