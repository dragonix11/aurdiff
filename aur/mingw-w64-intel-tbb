# Maintainer: xantares <xantares09 at hotmail dot com>

pkgname=intel-tbb
pkgname=mingw-w64-intel-tbb
pkgver=4.1_20130613
pkgrel=2
pkgdesc='High level abstract threading library (mingw-w64)'
depends=('mingw-w64-crt' 'mingw-w64-dlfcn' 'mingw-w64-winpthreads')
makedepends=('mingw-w64-dlfcn' 'mingw-w64-winpthreads' 'mingw-w64-gcc')
options=('!buildflags' '!strip')
arch=(any)
url='http://www.threadingbuildingblocks.org/'
license=('GPL')
source=("http://threadingbuildingblocks.org/sites/default/files/software_releases/source/tbb${pkgver/\./}oss_src.tgz")
sha1sums=('b1322bd10c5b05a79f61edb236adc0513b4a1532')

_architectures="i686-w64-mingw32 x86_64-w64-mingw32"

build() {
  cd tbb${pkgver/\./}oss
  cp build/linux.inc build/linux.inc.orig
  for _arch in ${_architectures}; do
    unset CXXFLAGS LDFLAGS
    cp build/linux.inc.orig build/linux.inc
    sed -i "s|gcc|${_arch}-gcc|g" build/linux.inc
    sed -i "s|DLL = so|DLL = dll|g" build/linux.inc
    #sed -i "s|LIBEXT = so|LIBEXT = dll.a|g" build/linux.inc

    sed -i "s|TBB.DLL = \$(TBB_NO_VERSION.DLL).\$(SONAME_SUFFIX)|TBB.DLL = libtbb\$(DEBUG_SUFFIX).\$(DLL)|g" build/linux.inc
    sed -i "s|TBB.LIB = \$(TBB.DLL)|#TBB.LIB = tbb\$(DEBUG_SUFFIX).\$(LIBEXT)|g" build/linux.inc
    sed -i "s|LINK_TBB.LIB = \$(TBB_NO_VERSION.DLL)|LINK_TBB.LIB = \$(TBB.DLL)|g" build/linux.inc
    sed -i "s|TBB_NO_VERSION.DLL=libtbb\$(CPF_SUFFIX)\$(DEBUG_SUFFIX).\$(DLL)|#TBB_NO_VERSION.DLL=libtbb\$(CPF_SUFFIX)\$(DEBUG_SUFFIX).\$(DLL)|g" build/linux.inc

    sed -i "s|MALLOC_NO_VERSION.DLL = libtbbmalloc\$(DEBUG_SUFFIX).\$(DLL)|#MALLOC_NO_VERSION = libtbbmalloc\$(DEBUG_SUFFIX).\$(DLL)|g" build/linux.inc
    sed -i "s|MALLOC.DLL = \$(MALLOC_NO_VERSION.DLL).\$(SONAME_SUFFIX)|MALLOC.DLL = libtbbmalloc\$(DEBUG_SUFFIX).\$(DLL)|g" build/linux.inc
    sed -i "s|LINK_MALLOC.LIB = \$(MALLOC_NO_VERSION.DLL)|LINK_MALLOC.LIB = \$(MALLOC.DLL)|g" build/linux.inc
    sed -i "s|MALLOC.LIB = \$(MALLOC_NO_VERSION.DLL)|#MALLOC.LIB = \$(MALLOC_NO_VERSION.DLL)|g" build/linux.inc
        
    sed -i "s|MALLOCPROXY_NO_VERSION.DLL = libtbbmalloc_proxy\$(DEBUG_SUFFIX).\$(DLL)|#MALLOCPROXY_NO_VERSION = libtbbmalloc_proxy\$(DEBUG_SUFFIX).\$(DLL)|g" build/linux.inc
    sed -i "s|MALLOCPROXY.DEF = |#MALLOCPROXY.DEF =|g" build/linux.inc
    sed -i "s|MALLOCPROXY.DLL = \$(MALLOCPROXY_NO_VERSION.DLL).\$(SONAME_SUFFIX)|MALLOCPROXY.DLL = libtbbmalloc_proxy\$(DEBUG_SUFFIX).\$(DLL)|g" build/linux.inc
    sed -i "s|LINK_MALLOCPROXY.LIB = \$(MALLOCPROXY.LIB)|LINK_MALLOCPROXY.LIB = \$(MALLOCPROXY.DLL)|g" build/linux.inc
    sed -i "s|MALLOCPROXY.LIB = \$(MALLOCPROXY_NO_VERSION.DLL)|#MALLOCPROXY.LIB = \$(MALLOCPROXY_NO_VERSION.DLL)|g" build/linux.inc

    sed -i "s|RML_NO_VERSION.DLL = libirml\$(DEBUG_SUFFIX).\$(DLL)|#RML_NO_VERSION.DLL = libirml\$(DEBUG_SUFFIX).\$(DLL)|g" build/linux.inc
    sed -i "s|RML.DLL = \$(RML_NO_VERSION.DLL).1|RML.DLL = libbirml\$(DEBUG_SUFFIX).\$(DLL)|g" build/linux.inc
    sed -i "s|LINK_RML.LIB = \$(RML_NO_VERSION.DLL)|LINK_RML.LIB = \$(RML.DLL)|g" build/linux.inc
    sed -i "s|RML.LIB = \$(RML_NO_VERSION.DLL)|#RML.LIB = \$(RML_NO_VERSION.DLL)|g" build/linux.inc

    echo "_WIN32_WINNT = 0x0502" >> build/linux.inc
    cp build/linux.gcc.inc build/linux.${_arch}-gcc.inc
    sed -i "s|CPLUS = g++|CPLUS = ${_arch}-g++|g" build/linux.${_arch}-gcc.inc
    sed -i "s|CONLY = gcc|CONLY = ${_arch}-gcc|g" build/linux.${_arch}-gcc.inc
    sed -i "s|LIBS += -lpthread -lrt|LIBS = -lpsapi|g" build/linux.${_arch}-gcc.inc
    sed -i "s|PIC_KEY = -fPIC|PIC_KEY =|g" build/linux.${_arch}-gcc.inc
    sed -i "s| -DUSE_PTHREAD| -DUSE_WINTHREAD -D_WIN32_WINNT=\$(_WIN32_WINNT) -DMINGW_HAS_SECURE_API=1 -D__MSVCRT_VERSION__=0x0700 -msse -mthreads|g" build/linux.${_arch}-gcc.inc
    sed -i "s|LINK_FLAGS = -Wl,-rpath-link=. -rdynamic|LINK_FLAGS = -Wl,--enable-auto-import|g" build/linux.${_arch}-gcc.inc
    sed -i "s|LIB_LINK_FLAGS = \$(DYLIB_KEY) -Wl,-soname=\$(BUILDING_LIBRARY)|LIB_LINK_FLAGS = \$(DYLIB_KEY) -Wl,--out-implib,\$(BUILDING_LIBRARY).a|g" build/linux.${_arch}-gcc.inc
    make arch=${_arch}
  done
}

package() {
  cd tbb${pkgver/\./}oss
  for _arch in ${_architectures}; do
    install -d ${pkgdir}/usr/${_arch}/include
    cp -a include/tbb ${pkgdir}/usr/${_arch}/include
    install -d ${pkgdir}/usr/${_arch}/bin
    install -m755 build/linux_${_arch}*_release/*.dll ${pkgdir}/usr/${_arch}/bin
    install -d ${pkgdir}/usr/${_arch}/lib
    install -m755 build/linux_${_arch}*_release/*.a ${pkgdir}/usr/${_arch}/lib
    ${_arch}-strip -x -g ${pkgdir}/usr/${_arch}/bin/*.dll
    ${_arch}-strip -g ${pkgdir}/usr/${_arch}/lib/*.a
  done
}
